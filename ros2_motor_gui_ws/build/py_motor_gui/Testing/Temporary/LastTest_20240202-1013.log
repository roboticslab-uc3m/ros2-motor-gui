Start testing: Feb 02 11:13 CET
----------------------------------------------------------
1/4 Testing: flake8
1/4 Test: flake8
Command: "/usr/bin/python3.10" "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/flake8.xunit.xml" "--package-name" "py_motor_gui" "--output-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/ament_flake8/flake8.txt" "--command" "/opt/ros/humble/bin/ament_flake8" "--xunit-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/flake8.xunit.xml"
Directory: /home/teo/ros2_motor_gui_ws/src/py_motor_gui
"flake8" start time: Feb 02 11:13 CET
Output:
----------------------------------------------------------
-- run_test.py: invoking following command in '/home/teo/ros2_motor_gui_ws/src/py_motor_gui':
 - /opt/ros/humble/bin/ament_flake8 --xunit-file /home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/flake8.xunit.xml
from PyQt5           import *
^
from PyQt5           import *
          ^
from .motorGuiNode   import WindowSubscriber
                  ^
from .motorGuiWindow import *
^
class MainWindow(QtWidgets.QMainWindow, Ui_Dialog):
^
class MainWindow(QtWidgets.QMainWindow, Ui_Dialog):
                 ^
class MainWindow(QtWidgets.QMainWindow, Ui_Dialog):
                                        ^
        QtWidgets.QMainWindow.__init__(self, *args, **kwargs)
        ^
    
^
        self.positionAxialNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialNeck_slider, self.velocityAxialNeck_slider, self.positionValueAxialNeck_label, self.velocityValueAxialNeck_label, 'AxialNeck', 'neck'))
                                                                 ^
        self.positionAxialNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialNeck_slider, self.velocityAxialNeck_slider, self.positionValueAxialNeck_label, self.velocityValueAxialNeck_label, 'AxialNeck', 'neck'))
                                                                                                   ^
        self.velocityAxialNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialNeck_slider, self.velocityAxialNeck_slider, self.positionValueAxialNeck_label, self.velocityValueAxialNeck_label, 'AxialNeck', 'neck'))
                                                                 ^
        self.velocityAxialNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialNeck_slider, self.velocityAxialNeck_slider, self.positionValueAxialNeck_label, self.velocityValueAxialNeck_label, 'AxialNeck', 'neck'))
                                                                                                   ^
        self.positionFrontalNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalNeck_slider, self.velocityFrontalNeck_slider, self.positionValueFrontalNeck_label, self.velocityValueFrontalNeck_label, 'FrontalNeck', 'neck'))
                                                                   ^
        self.positionFrontalNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalNeck_slider, self.velocityFrontalNeck_slider, self.positionValueFrontalNeck_label, self.velocityValueFrontalNeck_label, 'FrontalNeck', 'neck'))
                                                                                                   ^
        self.velocityFrontalNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalNeck_slider, self.velocityFrontalNeck_slider, self.positionValueFrontalNeck_label, self.velocityValueFrontalNeck_label, 'FrontalNeck', 'neck'))
                                                                   ^
        self.velocityFrontalNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalNeck_slider, self.velocityFrontalNeck_slider, self.positionValueFrontalNeck_label, self.velocityValueFrontalNeck_label, 'FrontalNeck', 'neck'))
                                                                                                   ^
        self.positionFrontalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightShoulder_slider, self.velocityFrontalRightShoulder_slider, self.positionValueFrontalRightShoulder_label, self.velocityValueFrontalRightShoulder_label, 'FrontalRightShoulder', 'rightArm'))
                                                                            ^
        self.positionFrontalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightShoulder_slider, self.velocityFrontalRightShoulder_slider, self.positionValueFrontalRightShoulder_label, self.velocityValueFrontalRightShoulder_label, 'FrontalRightShoulder', 'rightArm'))
                                                                                                   ^
        self.velocityFrontalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightShoulder_slider, self.velocityFrontalRightShoulder_slider, self.positionValueFrontalRightShoulder_label, self.velocityValueFrontalRightShoulder_label, 'FrontalRightShoulder', 'rightArm'))
                                                                            ^
        self.velocityFrontalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightShoulder_slider, self.velocityFrontalRightShoulder_slider, self.positionValueFrontalRightShoulder_label, self.velocityValueFrontalRightShoulder_label, 'FrontalRightShoulder', 'rightArm'))
                                                                                                   ^
        self.positionSagittalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightShoulder_slider, self.velocitySagittalRightShoulder_slider, self.positionValueSagittalRightShoulder_label, self.velocityValueSagittalRightShoulder_label, 'SagittalRightShoulder', 'rightArm'))
                                                                             ^
        self.positionSagittalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightShoulder_slider, self.velocitySagittalRightShoulder_slider, self.positionValueSagittalRightShoulder_label, self.velocityValueSagittalRightShoulder_label, 'SagittalRightShoulder', 'rightArm'))
                                                                                                   ^
        self.velocitySagittalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightShoulder_slider, self.velocitySagittalRightShoulder_slider, self.positionValueSagittalRightShoulder_label, self.velocityValueSagittalRightShoulder_label, 'SagittalRightShoulder', 'rightArm'))
                                                                             ^
        self.velocitySagittalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightShoulder_slider, self.velocitySagittalRightShoulder_slider, self.positionValueSagittalRightShoulder_label, self.velocityValueSagittalRightShoulder_label, 'SagittalRightShoulder', 'rightArm'))
                                                                                                   ^
        self.positionAxialRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightShoulder_slider, self.velocityAxialRightShoulder_slider, self.positionValueAxialRightShoulder_label, self.velocityValueAxialRightShoulder_label, 'AxialRightShoulder', 'rightArm'))
                                                                          ^
        self.positionAxialRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightShoulder_slider, self.velocityAxialRightShoulder_slider, self.positionValueAxialRightShoulder_label, self.velocityValueAxialRightShoulder_label, 'AxialRightShoulder', 'rightArm'))
                                                                                                   ^
        self.velocityAxialRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightShoulder_slider, self.velocityAxialRightShoulder_slider, self.positionValueAxialRightShoulder_label, self.velocityValueAxialRightShoulder_label, 'AxialRightShoulder', 'rightArm'))
                                                                          ^
        self.velocityAxialRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightShoulder_slider, self.velocityAxialRightShoulder_slider, self.positionValueAxialRightShoulder_label, self.velocityValueAxialRightShoulder_label, 'AxialRightShoulder', 'rightArm'))
                                                                                                   ^
        self.positionFrontalRightElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightElbow_slider, self.velocityFrontalRightElbow_slider, self.positionValueFrontalRightElbow_label, self.velocityValueFrontalRightElbow_label, 'FrontalRightElbow', 'rightArm'))
                                                                         ^
        self.positionFrontalRightElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightElbow_slider, self.velocityFrontalRightElbow_slider, self.positionValueFrontalRightElbow_label, self.velocityValueFrontalRightElbow_label, 'FrontalRightElbow', 'rightArm'))
                                                                                                   ^
        self.velocityFrontalRightElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightElbow_slider, self.velocityFrontalRightElbow_slider, self.positionValueFrontalRightElbow_label, self.velocityValueFrontalRightElbow_label, 'FrontalRightElbow', 'rightArm'))
                                                                         ^
        self.velocityFrontalRightElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightElbow_slider, self.velocityFrontalRightElbow_slider, self.positionValueFrontalRightElbow_label, self.velocityValueFrontalRightElbow_label, 'FrontalRightElbow', 'rightArm'))
                                                                                                   ^
        self.positionAxialRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightWrist_slider, self.velocityAxialRightWrist_slider, self.positionValueAxialRightWrist_label, self.velocityValueAxialRightWrist_label, 'AxialRightWrist', 'rightArm'))
                                                                       ^
        self.positionAxialRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightWrist_slider, self.velocityAxialRightWrist_slider, self.positionValueAxialRightWrist_label, self.velocityValueAxialRightWrist_label, 'AxialRightWrist', 'rightArm'))
                                                                                                   ^
        self.velocityAxialRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightWrist_slider, self.velocityAxialRightWrist_slider, self.positionValueAxialRightWrist_label, self.velocityValueAxialRightWrist_label, 'AxialRightWrist', 'rightArm'))
                                                                       ^
        self.velocityAxialRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightWrist_slider, self.velocityAxialRightWrist_slider, self.positionValueAxialRightWrist_label, self.velocityValueAxialRightWrist_label, 'AxialRightWrist', 'rightArm'))
                                                                                                   ^
        self.positionFrontalRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightWrist_slider, self.velocityFrontalRightWrist_slider, self.positionValueFrontalRightWrist_label, self.velocityValueFrontalRightWrist_label, 'FrontalRightWrist', 'rightArm'))
                                                                         ^
        self.positionFrontalRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightWrist_slider, self.velocityFrontalRightWrist_slider, self.positionValueFrontalRightWrist_label, self.velocityValueFrontalRightWrist_label, 'FrontalRightWrist', 'rightArm'))
                                                                                                   ^
        self.velocityFrontalRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightWrist_slider, self.velocityFrontalRightWrist_slider, self.positionValueFrontalRightWrist_label, self.velocityValueFrontalRightWrist_label, 'FrontalRightWrist', 'rightArm'))
                                                                         ^
        self.velocityFrontalRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightWrist_slider, self.velocityFrontalRightWrist_slider, self.positionValueFrontalRightWrist_label, self.velocityValueFrontalRightWrist_label, 'FrontalRightWrist', 'rightArm'))
                                                                                                   ^
        self.positionFrontalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftShoulder_slider, self.velocityFrontalLeftShoulder_slider, self.positionValueFrontalLeftShoulder_label, self.velocityValueFrontalLeftShoulder_label, 'FrontalLeftShoulder', 'leftArm'))
                                                                           ^
        self.positionFrontalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftShoulder_slider, self.velocityFrontalLeftShoulder_slider, self.positionValueFrontalLeftShoulder_label, self.velocityValueFrontalLeftShoulder_label, 'FrontalLeftShoulder', 'leftArm'))
                                                                                                   ^
        self.velocityFrontalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftShoulder_slider, self.velocityFrontalLeftShoulder_slider, self.positionValueFrontalLeftShoulder_label, self.velocityValueFrontalLeftShoulder_label, 'FrontalLeftShoulder', 'leftArm'))
                                                                           ^
        self.velocityFrontalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftShoulder_slider, self.velocityFrontalLeftShoulder_slider, self.positionValueFrontalLeftShoulder_label, self.velocityValueFrontalLeftShoulder_label, 'FrontalLeftShoulder', 'leftArm'))
                                                                                                   ^
        self.positionSagittalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftShoulder_slider, self.velocitySagittalLeftShoulder_slider, self.positionValueSagittalLeftShoulder_label, self.velocityValueSagittalLeftShoulder_label, 'SagittalLeftShoulder', 'leftArm'))
                                                                            ^
        self.positionSagittalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftShoulder_slider, self.velocitySagittalLeftShoulder_slider, self.positionValueSagittalLeftShoulder_label, self.velocityValueSagittalLeftShoulder_label, 'SagittalLeftShoulder', 'leftArm'))
                                                                                                   ^
        self.velocitySagittalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftShoulder_slider, self.velocitySagittalLeftShoulder_slider, self.positionValueSagittalLeftShoulder_label, self.velocityValueSagittalLeftShoulder_label, 'SagittalLeftShoulder', 'leftArm'))
                                                                            ^
        self.velocitySagittalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftShoulder_slider, self.velocitySagittalLeftShoulder_slider, self.positionValueSagittalLeftShoulder_label, self.velocityValueSagittalLeftShoulder_label, 'SagittalLeftShoulder', 'leftArm'))
                                                                                                   ^
        self.positionAxialLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftShoulder_slider, self.velocityAxialLeftShoulder_slider, self.positionValueAxialLeftShoulder_label, self.velocityValueAxialLeftShoulder_label, 'AxialLeftShoulder', 'leftArm'))
                                                                         ^
        self.positionAxialLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftShoulder_slider, self.velocityAxialLeftShoulder_slider, self.positionValueAxialLeftShoulder_label, self.velocityValueAxialLeftShoulder_label, 'AxialLeftShoulder', 'leftArm'))
                                                                                                   ^
        self.velocityAxialLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftShoulder_slider, self.velocityAxialLeftShoulder_slider, self.positionValueAxialLeftShoulder_label, self.velocityValueAxialLeftShoulder_label, 'AxialLeftShoulder', 'leftArm'))
                                                                         ^
        self.velocityAxialLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftShoulder_slider, self.velocityAxialLeftShoulder_slider, self.positionValueAxialLeftShoulder_label, self.velocityValueAxialLeftShoulder_label, 'AxialLeftShoulder', 'leftArm'))
                                                                                                   ^
        self.positionFrontalLeftElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftElbow_slider, self.velocityFrontalLeftElbow_slider, self.positionValueFrontalLeftElbow_label, self.velocityValueFrontalLeftElbow_label, 'FrontalLeftElbow', 'leftArm'))
                                                                        ^
        self.positionFrontalLeftElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftElbow_slider, self.velocityFrontalLeftElbow_slider, self.positionValueFrontalLeftElbow_label, self.velocityValueFrontalLeftElbow_label, 'FrontalLeftElbow', 'leftArm'))
                                                                                                   ^
        self.velocityFrontalLeftElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftElbow_slider, self.velocityFrontalLeftElbow_slider, self.positionValueFrontalLeftElbow_label, self.velocityValueFrontalLeftElbow_label, 'FrontalLeftElbow', 'leftArm'))
                                                                        ^
        self.velocityFrontalLeftElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftElbow_slider, self.velocityFrontalLeftElbow_slider, self.positionValueFrontalLeftElbow_label, self.velocityValueFrontalLeftElbow_label, 'FrontalLeftElbow', 'leftArm'))
                                                                                                   ^
        self.positionAxialLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftWrist_slider, self.velocityAxialLeftWrist_slider, self.positionValueAxialLeftWrist_label, self.velocityValueAxialLeftWrist_label, 'AxialLeftWrist', 'leftArm'))
                                                                      ^
        self.positionAxialLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftWrist_slider, self.velocityAxialLeftWrist_slider, self.positionValueAxialLeftWrist_label, self.velocityValueAxialLeftWrist_label, 'AxialLeftWrist', 'leftArm'))
                                                                                                   ^
        self.velocityAxialLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftWrist_slider, self.velocityAxialLeftWrist_slider, self.positionValueAxialLeftWrist_label, self.velocityValueAxialLeftWrist_label, 'AxialLeftWrist', 'leftArm'))
                                                                      ^
        self.velocityAxialLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftWrist_slider, self.velocityAxialLeftWrist_slider, self.positionValueAxialLeftWrist_label, self.velocityValueAxialLeftWrist_label, 'AxialLeftWrist', 'leftArm'))
                                                                                                   ^
        self.positionFrontalLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftWrist_slider, self.velocityFrontalLeftWrist_slider, self.positionValueFrontalLeftWrist_label, self.velocityValueFrontalLeftWrist_label, 'FrontalLeftWrist', 'leftArm'))
                                                                        ^
        self.positionFrontalLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftWrist_slider, self.velocityFrontalLeftWrist_slider, self.positionValueFrontalLeftWrist_label, self.velocityValueFrontalLeftWrist_label, 'FrontalLeftWrist', 'leftArm'))
                                                                                                   ^
        self.velocityFrontalLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftWrist_slider, self.velocityFrontalLeftWrist_slider, self.positionValueFrontalLeftWrist_label, self.velocityValueFrontalLeftWrist_label, 'FrontalLeftWrist', 'leftArm'))
                                                                        ^
        self.velocityFrontalLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftWrist_slider, self.velocityFrontalLeftWrist_slider, self.positionValueFrontalLeftWrist_label, self.velocityValueFrontalLeftWrist_label, 'FrontalLeftWrist', 'leftArm'))
                                                                                                   ^
     
^
        self.positionAxialTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialTrunk_slider, self.velocityAxialTrunk_slider, self.positionValueAxialTrunk_label, self.velocityValueAxialTrunk_label, 'AxialTrunk', 'trunk'))
                                                                  ^
        self.positionAxialTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialTrunk_slider, self.velocityAxialTrunk_slider, self.positionValueAxialTrunk_label, self.velocityValueAxialTrunk_label, 'AxialTrunk', 'trunk'))
                                                                                                   ^
        self.velocityAxialTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialTrunk_slider, self.velocityAxialTrunk_slider, self.positionValueAxialTrunk_label, self.velocityValueAxialTrunk_label, 'AxialTrunk', 'trunk'))
                                                                  ^
        self.velocityAxialTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialTrunk_slider, self.velocityAxialTrunk_slider, self.positionValueAxialTrunk_label, self.velocityValueAxialTrunk_label, 'AxialTrunk', 'trunk'))
                                                                                                   ^
        self.positionFrontalTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalTrunk_slider, self.velocityFrontalTrunk_slider, self.positionValueFrontalTrunk_label, self.velocityValueFrontalTrunk_label, 'FrontalTrunk', 'trunk'))
                                                                    ^
        self.positionFrontalTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalTrunk_slider, self.velocityFrontalTrunk_slider, self.positionValueFrontalTrunk_label, self.velocityValueFrontalTrunk_label, 'FrontalTrunk', 'trunk'))
                                                                                                   ^
        self.velocityFrontalTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalTrunk_slider, self.velocityFrontalTrunk_slider, self.positionValueFrontalTrunk_label, self.velocityValueFrontalTrunk_label, 'FrontalTrunk', 'trunk'))
                                                                    ^
        self.velocityFrontalTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalTrunk_slider, self.velocityFrontalTrunk_slider, self.positionValueFrontalTrunk_label, self.velocityValueFrontalTrunk_label, 'FrontalTrunk', 'trunk'))
                                                                                                   ^
        self.positionAxialRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightHip_slider, self.velocityAxialRightHip_slider, self.positionValueAxialRightHip_label, self.velocityValueAxialRightHip_label, 'AxialRightHip', 'rightLeg'))
                                                                     ^
        self.positionAxialRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightHip_slider, self.velocityAxialRightHip_slider, self.positionValueAxialRightHip_label, self.velocityValueAxialRightHip_label, 'AxialRightHip', 'rightLeg'))
                                                                                                   ^
        self.velocityAxialRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightHip_slider, self.velocityAxialRightHip_slider, self.positionValueAxialRightHip_label, self.velocityValueAxialRightHip_label, 'AxialRightHip', 'rightLeg'))
                                                                     ^
        self.velocityAxialRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightHip_slider, self.velocityAxialRightHip_slider, self.positionValueAxialRightHip_label, self.velocityValueAxialRightHip_label, 'AxialRightHip', 'rightLeg'))
                                                                                                   ^
        self.positionSagittalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightHip_slider, self.velocitySagittalRightHip_slider, self.positionValueSagittalRightHip_label, self.velocityValueSagittalRightHip_label,'SagittalRightHip', 'rightLeg'))
                                                                        ^
        self.positionSagittalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightHip_slider, self.velocitySagittalRightHip_slider, self.positionValueSagittalRightHip_label, self.velocityValueSagittalRightHip_label,'SagittalRightHip', 'rightLeg'))
                                                                                                   ^
        self.positionSagittalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightHip_slider, self.velocitySagittalRightHip_slider, self.positionValueSagittalRightHip_label, self.velocityValueSagittalRightHip_label,'SagittalRightHip', 'rightLeg'))
                                                                                                                                                                                                                                                       ^
        self.velocitySagittalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightHip_slider, self.velocitySagittalRightHip_slider, self.positionValueSagittalRightHip_label, self.velocityValueSagittalRightHip_label, 'SagittalRightHip', 'rightLeg'))
                                                                        ^
        self.velocitySagittalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightHip_slider, self.velocitySagittalRightHip_slider, self.positionValueSagittalRightHip_label, self.velocityValueSagittalRightHip_label, 'SagittalRightHip', 'rightLeg'))
                                                                                                   ^
        self.positionFrontalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightHip_slider, self.velocityFrontalRightHip_slider, self.positionValueFrontalRightHip_label, self.velocityValueFrontalRightHip_label, 'FrontalRightHip', 'rightLeg'))
                                                                       ^
        self.positionFrontalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightHip_slider, self.velocityFrontalRightHip_slider, self.positionValueFrontalRightHip_label, self.velocityValueFrontalRightHip_label, 'FrontalRightHip', 'rightLeg'))
                                                                                                   ^
        self.velocityFrontalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightHip_slider, self.velocityFrontalRightHip_slider, self.positionValueFrontalRightHip_label, self.velocityValueFrontalRightHip_label, 'FrontalRightHip', 'rightLeg'))
                                                                       ^
        self.velocityFrontalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightHip_slider, self.velocityFrontalRightHip_slider, self.positionValueFrontalRightHip_label, self.velocityValueFrontalRightHip_label, 'FrontalRightHip', 'rightLeg'))
                                                                                                   ^
        self.positionFrontalRightKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightKnee_slider, self.velocityFrontalRightKnee_slider, self.positionValueFrontalRightKnee_label, self.velocityValueFrontalRightKnee_label, 'FrontalRightKnee', 'rightLeg'))
                                                                        ^
        self.positionFrontalRightKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightKnee_slider, self.velocityFrontalRightKnee_slider, self.positionValueFrontalRightKnee_label, self.velocityValueFrontalRightKnee_label, 'FrontalRightKnee', 'rightLeg'))
                                                                                                   ^
        self.velocityFrontalRightKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightKnee_slider, self.velocityFrontalRightKnee_slider, self.positionValueFrontalRightKnee_label, self.velocityValueFrontalRightKnee_label, 'FrontalRightKnee', 'rightLeg'))
                                                                        ^
        self.velocityFrontalRightKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightKnee_slider, self.velocityFrontalRightKnee_slider, self.positionValueFrontalRightKnee_label, self.velocityValueFrontalRightKnee_label, 'FrontalRightKnee', 'rightLeg'))
                                                                                                   ^
        self.positionFrontalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightAnkle_slider, self.velocityFrontalRightAnkle_slider, self.positionValueFrontalRightAnkle_label, self.velocityValueFrontalRightAnkle_label, 'FrontalRightAnkle', 'rightLeg'))
                                                                         ^
        self.positionFrontalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightAnkle_slider, self.velocityFrontalRightAnkle_slider, self.positionValueFrontalRightAnkle_label, self.velocityValueFrontalRightAnkle_label, 'FrontalRightAnkle', 'rightLeg'))
                                                                                                   ^
        self.velocityFrontalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightAnkle_slider, self.velocityFrontalRightAnkle_slider, self.positionValueFrontalRightAnkle_label, self.velocityValueFrontalRightAnkle_label, 'FrontalRightAnkle', 'rightLeg'))
                                                                         ^
        self.velocityFrontalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightAnkle_slider, self.velocityFrontalRightAnkle_slider, self.positionValueFrontalRightAnkle_label, self.velocityValueFrontalRightAnkle_label, 'FrontalRightAnkle', 'rightLeg'))
                                                                                                   ^
        self.positionSagittalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightAnkle_slider, self.velocitySagittalRightAnkle_slider, self.positionValueSagittalRightAnkle_label, self.velocityValueSagittalRightAnkle_label, 'SagittalRightAnkle', 'rightLeg'))
                                                                          ^
        self.positionSagittalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightAnkle_slider, self.velocitySagittalRightAnkle_slider, self.positionValueSagittalRightAnkle_label, self.velocityValueSagittalRightAnkle_label, 'SagittalRightAnkle', 'rightLeg'))
                                                                                                   ^
        self.velocitySagittalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightAnkle_slider, self.velocitySagittalRightAnkle_slider, self.positionValueSagittalRightAnkle_label, self.velocityValueSagittalRightAnkle_label, 'SagittalRightAnkle', 'rightLeg'))
                                                                          ^
        self.velocitySagittalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightAnkle_slider, self.velocitySagittalRightAnkle_slider, self.positionValueSagittalRightAnkle_label, self.velocityValueSagittalRightAnkle_label, 'SagittalRightAnkle', 'rightLeg'))
                                                                                                   ^
        self.positionAxialLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftHip_slider, self.velocityAxialLeftHip_slider, self.positionValueAxialLeftHip_label, self.velocityValueAxialLeftHip_label, 'AxialLeftHip', 'leftLeg'))
                                                                    ^
        self.positionAxialLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftHip_slider, self.velocityAxialLeftHip_slider, self.positionValueAxialLeftHip_label, self.velocityValueAxialLeftHip_label, 'AxialLeftHip', 'leftLeg'))
                                                                                                   ^
        self.velocityAxialLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftHip_slider, self.velocityAxialLeftHip_slider, self.positionValueAxialLeftHip_label, self.velocityValueAxialLeftHip_label, 'AxialLeftHip', 'leftLeg'))
                                                                    ^
        self.velocityAxialLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftHip_slider, self.velocityAxialLeftHip_slider, self.positionValueAxialLeftHip_label, self.velocityValueAxialLeftHip_label, 'AxialLeftHip', 'leftLeg'))
                                                                                                   ^
        self.positionSagittalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftHip_slider, self.velocitySagittalLeftHip_slider, self.positionValueSagittalLeftHip_label, self.velocityValueSagittalLeftHip_label, 'SagittalLeftHip', 'leftLeg'))
                                                                       ^
        self.positionSagittalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftHip_slider, self.velocitySagittalLeftHip_slider, self.positionValueSagittalLeftHip_label, self.velocityValueSagittalLeftHip_label, 'SagittalLeftHip', 'leftLeg'))
                                                                                                   ^
        self.velocitySagittalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftHip_slider, self.velocitySagittalLeftHip_slider, self.positionValueSagittalLeftHip_label, self.velocityValueSagittalLeftHip_label, 'SagittalLeftHip', 'leftLeg'))
                                                                       ^
        self.velocitySagittalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftHip_slider, self.velocitySagittalLeftHip_slider, self.positionValueSagittalLeftHip_label, self.velocityValueSagittalLeftHip_label, 'SagittalLeftHip', 'leftLeg'))
                                                                                                   ^
        self.positionFrontalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftHip_slider, self.velocityFrontalLeftHip_slider, self.positionValueFrontalLeftHip_label, self.velocityValueFrontalLeftHip_label, 'FrontalLeftHip', 'leftLeg'))
                                                                      ^
        self.positionFrontalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftHip_slider, self.velocityFrontalLeftHip_slider, self.positionValueFrontalLeftHip_label, self.velocityValueFrontalLeftHip_label, 'FrontalLeftHip', 'leftLeg'))
                                                                                                   ^
        self.velocityFrontalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftHip_slider, self.velocityFrontalLeftHip_slider, self.positionValueFrontalLeftHip_label, self.velocityValueFrontalLeftHip_label, 'FrontalLeftHip', 'leftLeg'))
                                                                      ^
        self.velocityFrontalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftHip_slider, self.velocityFrontalLeftHip_slider, self.positionValueFrontalLeftHip_label, self.velocityValueFrontalLeftHip_label, 'FrontalLeftHip', 'leftLeg'))
                                                                                                   ^
        self.positionFrontalLeftKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftKnee_slider, self.velocityFrontalLeftKnee_slider, self.positionValueFrontalLeftKnee_label, self.velocityValueFrontalLeftKnee_label, 'FrontalLeftKnee', 'leftLeg'))
                                                                       ^
        self.positionFrontalLeftKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftKnee_slider, self.velocityFrontalLeftKnee_slider, self.positionValueFrontalLeftKnee_label, self.velocityValueFrontalLeftKnee_label, 'FrontalLeftKnee', 'leftLeg'))
                                                                                                   ^
        self.velocityFrontalLeftKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftKnee_slider, self.velocityFrontalLeftKnee_slider, self.positionValueFrontalLeftKnee_label, self.velocityValueFrontalLeftKnee_label, 'FrontalLeftKnee', 'leftLeg'))
                                                                       ^
        self.velocityFrontalLeftKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftKnee_slider, self.velocityFrontalLeftKnee_slider, self.positionValueFrontalLeftKnee_label, self.velocityValueFrontalLeftKnee_label, 'FrontalLeftKnee', 'leftLeg'))
                                                                                                   ^
        self.positionFrontalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftAnkle_slider, self.velocityFrontalLeftAnkle_slider, self.positionValueFrontalLeftAnkle_label, self.velocityValueFrontalLeftAnkle_label, 'FrontalLeftAnkle', 'leftLeg'))
                                                                        ^

./src/motorGuiLogic.py:4:1: F403 'from PyQt5 import *' used; unable to detect undefined names

./src/motorGuiLogic.py:4:11: E272 multiple spaces before keyword

./src/motorGuiLogic.py:5:19: E272 multiple spaces before keyword

./src/motorGuiLogic.py:6:1: F403 'from .motorGuiWindow import *' used; unable to detect undefined names

./src/motorGuiLogic.py:8:1: E302 expected 2 blank lines, found 1

./src/motorGuiLogic.py:8:18: F405 'QtWidgets' may be undefined, or defined from star imports: .motorGuiWindow, PyQt5

./src/motorGuiLogic.py:8:41: F405 'Ui_Dialog' may be undefined, or defined from star imports: .motorGuiWindow, PyQt5

./src/motorGuiLogic.py:11:9: F405 'QtWidgets' may be undefined, or defined from star imports: .motorGuiWindow, PyQt5

./src/motorGuiLogic.py:18:1: W293 blank line contains whitespace

./src/motorGuiLogic.py:21:66: E231 missing whitespace after ':'

./src/motorGuiLogic.py:21:100: E501 line too long (235 > 99 characters)

./src/motorGuiLogic.py:22:66: E231 missing whitespace after ':'

./src/motorGuiLogic.py:22:100: E501 line too long (235 > 99 characters)

./src/motorGuiLogic.py:23:68: E231 missing whitespace after ':'

./src/motorGuiLogic.py:23:100: E501 line too long (247 > 99 characters)

./src/motorGuiLogic.py:24:68: E231 missing whitespace after ':'

./src/motorGuiLogic.py:24:100: E501 line too long (247 > 99 characters)

./src/motorGuiLogic.py:26:77: E231 missing whitespace after ':'

./src/motorGuiLogic.py:26:100: E501 line too long (305 > 99 characters)

./src/motorGuiLogic.py:27:77: E231 missing whitespace after ':'

./src/motorGuiLogic.py:27:100: E501 line too long (305 > 99 characters)

./src/motorGuiLogic.py:28:78: E231 missing whitespace after ':'

./src/motorGuiLogic.py:28:100: E501 line too long (311 > 99 characters)

./src/motorGuiLogic.py:29:78: E231 missing whitespace after ':'

./src/motorGuiLogic.py:29:100: E501 line too long (311 > 99 characters)

./src/motorGuiLogic.py:30:75: E231 missing whitespace after ':'

./src/motorGuiLogic.py:30:100: E501 line too long (293 > 99 characters)

./src/motorGuiLogic.py:31:75: E231 missing whitespace after ':'

./src/motorGuiLogic.py:31:100: E501 line too long (293 > 99 characters)

./src/motorGuiLogic.py:32:74: E231 missing whitespace after ':'

./src/motorGuiLogic.py:32:100: E501 line too long (287 > 99 characters)

./src/motorGuiLogic.py:33:74: E231 missing whitespace after ':'

./src/motorGuiLogic.py:33:100: E501 line too long (287 > 99 characters)

./src/motorGuiLogic.py:34:72: E231 missing whitespace after ':'

./src/motorGuiLogic.py:34:100: E501 line too long (275 > 99 characters)

./src/motorGuiLogic.py:35:72: E231 missing whitespace after ':'

./src/motorGuiLogic.py:35:100: E501 line too long (275 > 99 characters)

./src/motorGuiLogic.py:36:74: E231 missing whitespace after ':'

./src/motorGuiLogic.py:36:100: E501 line too long (287 > 99 characters)

./src/motorGuiLogic.py:37:74: E231 missing whitespace after ':'

./src/motorGuiLogic.py:37:100: E501 line too long (287 > 99 characters)

./src/motorGuiLogic.py:39:76: E231 missing whitespace after ':'

./src/motorGuiLogic.py:39:100: E501 line too long (298 > 99 characters)

./src/motorGuiLogic.py:40:76: E231 missing whitespace after ':'

./src/motorGuiLogic.py:40:100: E501 line too long (298 > 99 characters)

./src/motorGuiLogic.py:41:77: E231 missing whitespace after ':'

./src/motorGuiLogic.py:41:100: E501 line too long (304 > 99 characters)

./src/motorGuiLogic.py:42:77: E231 missing whitespace after ':'

./src/motorGuiLogic.py:42:100: E501 line too long (304 > 99 characters)

./src/motorGuiLogic.py:43:74: E231 missing whitespace after ':'

./src/motorGuiLogic.py:43:100: E501 line too long (286 > 99 characters)

./src/motorGuiLogic.py:44:74: E231 missing whitespace after ':'

./src/motorGuiLogic.py:44:100: E501 line too long (286 > 99 characters)

./src/motorGuiLogic.py:45:73: E231 missing whitespace after ':'

./src/motorGuiLogic.py:45:100: E501 line too long (280 > 99 characters)

./src/motorGuiLogic.py:46:73: E231 missing whitespace after ':'

./src/motorGuiLogic.py:46:100: E501 line too long (280 > 99 characters)

./src/motorGuiLogic.py:47:71: E231 missing whitespace after ':'

./src/motorGuiLogic.py:47:100: E501 line too long (268 > 99 characters)

./src/motorGuiLogic.py:48:71: E231 missing whitespace after ':'

./src/motorGuiLogic.py:48:100: E501 line too long (268 > 99 characters)

./src/motorGuiLogic.py:49:73: E231 missing whitespace after ':'

./src/motorGuiLogic.py:49:100: E501 line too long (280 > 99 characters)

./src/motorGuiLogic.py:50:73: E231 missing whitespace after ':'

./src/motorGuiLogic.py:50:100: E501 line too long (280 > 99 characters)

./src/motorGuiLogic.py:51:1: W293 blank line contains whitespace

./src/motorGuiLogic.py:52:67: E231 missing whitespace after ':'

./src/motorGuiLogic.py:52:100: E501 line too long (242 > 99 characters)

./src/motorGuiLogic.py:53:67: E231 missing whitespace after ':'

./src/motorGuiLogic.py:53:100: E501 line too long (242 > 99 characters)

./src/motorGuiLogic.py:54:69: E231 missing whitespace after ':'

./src/motorGuiLogic.py:54:100: E501 line too long (254 > 99 characters)

./src/motorGuiLogic.py:55:69: E231 missing whitespace after ':'

./src/motorGuiLogic.py:55:100: E501 line too long (254 > 99 characters)

./src/motorGuiLogic.py:57:70: E231 missing whitespace after ':'

./src/motorGuiLogic.py:57:100: E501 line too long (263 > 99 characters)

./src/motorGuiLogic.py:58:70: E231 missing whitespace after ':'

./src/motorGuiLogic.py:58:100: E501 line too long (263 > 99 characters)

./src/motorGuiLogic.py:59:73: E231 missing whitespace after ':'

./src/motorGuiLogic.py:59:100: E501 line too long (280 > 99 characters)

./src/motorGuiLogic.py:59:248: E231 missing whitespace after ','

./src/motorGuiLogic.py:60:73: E231 missing whitespace after ':'

./src/motorGuiLogic.py:60:100: E501 line too long (281 > 99 characters)

./src/motorGuiLogic.py:61:72: E231 missing whitespace after ':'

./src/motorGuiLogic.py:61:100: E501 line too long (275 > 99 characters)

./src/motorGuiLogic.py:62:72: E231 missing whitespace after ':'

./src/motorGuiLogic.py:62:100: E501 line too long (275 > 99 characters)

./src/motorGuiLogic.py:63:73: E231 missing whitespace after ':'

./src/motorGuiLogic.py:63:100: E501 line too long (281 > 99 characters)

./src/motorGuiLogic.py:64:73: E231 missing whitespace after ':'

./src/motorGuiLogic.py:64:100: E501 line too long (281 > 99 characters)

./src/motorGuiLogic.py:65:74: E231 missing whitespace after ':'

./src/motorGuiLogic.py:65:100: E501 line too long (287 > 99 characters)

./src/motorGuiLogic.py:66:74: E231 missing whitespace after ':'

./src/motorGuiLogic.py:66:100: E501 line too long (287 > 99 characters)

./src/motorGuiLogic.py:67:75: E231 missing whitespace after ':'

./src/motorGuiLogic.py:67:100: E501 line too long (293 > 99 characters)

./src/motorGuiLogic.py:68:75: E231 missing whitespace after ':'

./src/motorGuiLogic.py:68:100: E501 line too long (293 > 99 characters)

./src/motorGuiLogic.py:70:69: E231 missing whitespace after ':'

./src/motorGuiLogic.py:70:100: E501 line too long (256 > 99 characters)

./src/motorGuiLogic.py:71:69: E231 missing whitespace after ':'

./src/motorGuiLogic.py:71:100: E501 line too long (256 > 99 characters)

./src/motorGuiLogic.py:72:72: E231 missing whitespace after ':'

./src/motorGuiLogic.py:72:100: E501 line too long (274 > 99 characters)

./src/motorGuiLogic.py:73:72: E231 missing whitespace after ':'

./src/motorGuiLogic.py:73:100: E501 line too long (274 > 99 characters)

./src/motorGuiLogic.py:74:71: E231 missing whitespace after ':'

./src/motorGuiLogic.py:74:100: E501 line too long (268 > 99 characters)

./src/motorGuiLogic.py:75:71: E231 missing whitespace after ':'

./src/motorGuiLogic.py:75:100: E501 line too long (268 > 99 characters)

./src/motorGuiLogic.py:76:72: E231 missing whitespace after ':'

./src/motorGuiLogic.py:76:100: E501 line too long (274 > 99 characters)

./src/motorGuiLogic.py:77:72: E231 missing whitespace after ':'

./src/motorGuiLogic.py:77:100: E501 line too long (274 > 99 characters)

./src/motorGuiLogic.py:78:73: E231 missing whitespace after ':'

        self.positionFrontalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftAnkle_slider, self.velocityFrontalLeftAnkle_slider, self.positionValueFrontalLeftAnkle_label, self.velocityValueFrontalLeftAnkle_label, 'FrontalLeftAnkle', 'leftLeg'))
                                                                                                   ^
        self.velocityFrontalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftAnkle_slider, self.velocityFrontalLeftAnkle_slider, self.positionValueFrontalLeftAnkle_label, self.velocityValueFrontalLeftAnkle_label, 'FrontalLeftAnkle', 'leftLeg'))
                                                                        ^
        self.velocityFrontalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftAnkle_slider, self.velocityFrontalLeftAnkle_slider, self.positionValueFrontalLeftAnkle_label, self.velocityValueFrontalLeftAnkle_label, 'FrontalLeftAnkle', 'leftLeg'))
                                                                                                   ^
        self.positionSagittalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftAnkle_slider, self.velocitySagittalLeftAnkle_slider, self.positionValueSagittalLeftAnkle_label, self.velocityValueSagittalLeftAnkle_label, 'SagittalLeftAnkle', 'leftLeg'))
                                                                         ^
        self.positionSagittalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftAnkle_slider, self.velocitySagittalLeftAnkle_slider, self.positionValueSagittalLeftAnkle_label, self.velocityValueSagittalLeftAnkle_label, 'SagittalLeftAnkle', 'leftLeg'))
                                                                                                   ^
        self.velocitySagittalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftAnkle_slider, self.velocitySagittalLeftAnkle_slider, self.positionValueSagittalLeftAnkle_label, self.velocityValueSagittalLeftAnkle_label, 'SagittalLeftAnkle', 'leftLeg'))
                                                                         ^
        self.velocitySagittalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftAnkle_slider, self.velocitySagittalLeftAnkle_slider, self.positionValueSagittalLeftAnkle_label, self.velocityValueSagittalLeftAnkle_label, 'SagittalLeftAnkle', 'leftLeg'))
                                                                                                   ^
    def dragSlider(self, positionSlider, velocitySlider, positionValueLabel, velocityValueLabel, articulation, extremity):
                                                                                                   ^
        
^
        self.subscriber.publishPosition(articulation, str(positionSlider.value() - 90), str(velocitySlider.value()), extremity)
                                                                                                   ^
    
^
    app = QtWidgets.QApplication([])
          ^
    app.exec_()               ^
import itertools
^
class WindowSubscriber(Node):
^
        #for position, speed in zip(positions, speeds):
        ^
def main(args=None):
^
if(__name__ == '__main__'):
^
    main()          ^
from PyQt5 import QtCore, QtGui, QtWidgets
^
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
                                                                           ^
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
                                                                                                   ^
        self.velocityFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)
                                                                                                   ^
        self.positionFrontalRightShoulder_slider = QtWidgets.QSlider(self.frontalRightShoulder_groupBox)
                                                                                                   ^
        self.positionFrontalRightShoulder_slider.setObjectName("positionFrontalRightShoulder_slider")
                                                                                                   ^
        self.velocityFrontalRightShoulder_slider = QtWidgets.QSlider(self.frontalRightShoulder_groupBox)
                                                                                                   ^
        self.velocityFrontalRightShoulder_slider.setObjectName("velocityFrontalRightShoulder_slider")
                                                                                                   ^
        self.positionFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)
                                                                                                   ^
        self.velocityValueFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)
                                                                                                   ^
        self.velocityValueFrontalRightShoulder_label.setObjectName("velocityValueFrontalRightShoulder_label")
                                                                                                   ^
        self.positionValueFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)
                                                                                                   ^
        self.positionValueFrontalRightShoulder_label.setObjectName("positionValueFrontalRightShoulder_label")
                                                                                                   ^
        self.torqueFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)
                                                                                                   ^
        self.encoderFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)
                                                                                                   ^
        self.encoderFrontalRightShoulder_lineEdit = QtWidgets.QLineEdit(self.frontalRightShoulder_groupBox)
                                                                                                   ^
        self.encoderFrontalRightShoulder_lineEdit.setObjectName("encoderFrontalRightShoulder_lineEdit")
                                                                                                   ^
        self.torqueFrontalRightShoulder_lineEdit = QtWidgets.QLineEdit(self.frontalRightShoulder_groupBox)
                                                                                                   ^
        self.torqueFrontalRightShoulder_lineEdit.setObjectName("torqueFrontalRightShoulder_lineEdit")
                                                                                                   ^
        self.velocitySagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)
                                                                                                   ^
        self.velocitySagittalRightShoulder_label.setObjectName("velocitySagittalRightShoulder_label")
                                                                                                   ^
        self.positionSagittalRightShoulder_slider = QtWidgets.QSlider(self.sagittalRightShoulder_groupBox)
                                                                                                   ^
        self.positionSagittalRightShoulder_slider.setObjectName("positionSagittalRightShoulder_slider")
                                                                                                   ^
        self.velocitySagittalRightShoulder_slider = QtWidgets.QSlider(self.sagittalRightShoulder_groupBox)
                                                                                                   ^
        self.velocitySagittalRightShoulder_slider.setObjectName("velocitySagittalRightShoulder_slider")
                                                                                                   ^
        self.positionSagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)
                                                                                                   ^
        self.positionSagittalRightShoulder_label.setObjectName("positionSagittalRightShoulder_label")
                                                                                                   ^
        self.velocityValueSagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)
                                                                                                   ^
        self.velocityValueSagittalRightShoulder_label.setObjectName("velocityValueSagittalRightShoulder_label")
                                                                                                   ^
        self.positionValueSagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)
                                                                                                   ^
        self.positionValueSagittalRightShoulder_label.setObjectName("positionValueSagittalRightShoulder_label")
                                                                                                   ^
        self.torqueSagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)
                                                                                                   ^
        self.encoderSagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)
                                                                                                   ^
        self.encoderSagittalRightShoulder_lineEdit = QtWidgets.QLineEdit(self.sagittalRightShoulder_groupBox)
                                                                                                   ^
        self.encoderSagittalRightShoulder_lineEdit.setObjectName("encoderSagittalRightShoulder_lineEdit")
                                                                                                   ^
        self.torqueSagittalRightShoulder_lineEdit = QtWidgets.QLineEdit(self.sagittalRightShoulder_groupBox)
                                                                                                   ^
        self.torqueSagittalRightShoulder_lineEdit.setObjectName("torqueSagittalRightShoulder_lineEdit")
                                                                                                   ^
        self.positionAxialRightShoulder_slider = QtWidgets.QSlider(self.axialRightShoulder_groupBox)
                                                                                                   ^
        self.velocityAxialRightShoulder_slider = QtWidgets.QSlider(self.axialRightShoulder_groupBox)
                                                                                                   ^
        self.positionValueAxialRightShoulder_label = QtWidgets.QLabel(self.axialRightShoulder_groupBox)
                                                                                                   ^
        self.positionValueAxialRightShoulder_label.setObjectName("positionValueAxialRightShoulder_label")
                                                                                                   ^
        self.velocityValueAxialRightShoulder_label = QtWidgets.QLabel(self.axialRightShoulder_groupBox)
                                                                                                   ^
        self.velocityValueAxialRightShoulder_label.setObjectName("velocityValueAxialRightShoulder_label")
                                                                                                   ^
        self.encoderAxialRightShoulder_lineEdit = QtWidgets.QLineEdit(self.axialRightShoulder_groupBox)
                                                                                                   ^
        self.torqueAxialRightShoulder_lineEdit = QtWidgets.QLineEdit(self.axialRightShoulder_groupBox)
                                                                                                   ^
        self.velocityValueFrontalRightElbow_label = QtWidgets.QLabel(self.frontalRightElbow_groupBox)
                                                                                                   ^
        self.velocityValueFrontalRightElbow_label.setObjectName("velocityValueFrontalRightElbow_label")
                                                                                                   ^
        self.positionValueFrontalRightElbow_label = QtWidgets.QLabel(self.frontalRightElbow_groupBox)
                                                                                                   ^
        self.positionValueFrontalRightElbow_label.setObjectName("positionValueFrontalRightElbow_label")
                                                                                                   ^
        self.encoderFrontalRightElbow_lineEdit = QtWidgets.QLineEdit(self.frontalRightElbow_groupBox)
                                                                                                   ^
        self.torqueFrontalRightElbow_lineEdit = QtWidgets.QLineEdit(self.frontalRightElbow_groupBox)
                                                                                                   ^
        self.velocityValueFrontalRightWrist_label = QtWidgets.QLabel(self.frontalRightWrist_groupBox)
                                                                                                   ^
        self.velocityValueFrontalRightWrist_label.setObjectName("velocityValueFrontalRightWrist_label")
                                                                                                   ^
        self.positionValueFrontalRightWrist_label = QtWidgets.QLabel(self.frontalRightWrist_groupBox)
                                                                                                   ^
        self.positionValueFrontalRightWrist_label.setObjectName("positionValueFrontalRightWrist_label")
                                                                                                   ^
        self.encoderFrontalRightWrist_lineEdit = QtWidgets.QLineEdit(self.frontalRightWrist_groupBox)
                                                                                                   ^
        self.torqueFrontalRightWrist_lineEdit = QtWidgets.QLineEdit(self.frontalRightWrist_groupBox)
                                                                                                   ^
        self.positionSagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)
                                                                                                   ^
        self.velocitySagittalLeftShoulder_slider = QtWidgets.QSlider(self.sagittalLeftShoulder_groupBox)
                                                                                                   ^
        self.velocitySagittalLeftShoulder_slider.setObjectName("velocitySagittalLeftShoulder_slider")
                                                                                                   ^
        self.velocitySagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)
                                                                                                   ^
        self.positionSagittalLeftShoulder_slider = QtWidgets.QSlider(self.sagittalLeftShoulder_groupBox)
                                                                                                   ^
        self.positionSagittalLeftShoulder_slider.setObjectName("positionSagittalLeftShoulder_slider")
                                                                                                   ^
        self.velocityValueSagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)
                                                                                                   ^
        self.velocityValueSagittalLeftShoulder_label.setObjectName("velocityValueSagittalLeftShoulder_label")
                                                                                                   ^
        self.positionValueSagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)
                                                                                                   ^
        self.positionValueSagittalLeftShoulder_label.setObjectName("positionValueSagittalLeftShoulder_label")
                                                                                                   ^
        self.encoderSagittalLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.sagittalLeftShoulder_groupBox)
                                                                                                   ^
        self.encoderSagittalLeftShoulder_lineEdit.setObjectName("encoderSagittalLeftShoulder_lineEdit")
                                                                                                   ^
        self.torqueSagittalLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.sagittalLeftShoulder_groupBox)
                                                                                                   ^
        self.torqueSagittalLeftShoulder_lineEdit.setObjectName("torqueSagittalLeftShoulder_lineEdit")
                                                                                                   ^
        self.encoderSagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)
                                                                                                   ^
        self.torqueSagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)
                                                                                                   ^
        self.positionValueFrontalLeftWrist_label.setObjectName("positionValueFrontalLeftWrist_label")
                                                                                                   ^
        self.velocityValueFrontalLeftWrist_label.setObjectName("velocityValueFrontalLeftWrist_label")
                                                                                                   ^
        self.velocityValueAxialLeftShoulder_label = QtWidgets.QLabel(self.axialLeftShoulder_groupBox)
                                                                                                   ^
        self.velocityValueAxialLeftShoulder_label.setObjectName("velocityValueAxialLeftShoulder_label")
                                                                                                   ^
        self.positionValueAxialLeftShoulder_label = QtWidgets.QLabel(self.axialLeftShoulder_groupBox)
                                                                                                   ^
        self.positionValueAxialLeftShoulder_label.setObjectName("positionValueAxialLeftShoulder_label")
                                                                                                   ^
        self.encoderAxialLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.axialLeftShoulder_groupBox)
                                                                                                   ^
        self.torqueAxialLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.axialLeftShoulder_groupBox)
                                                                                                   ^
        self.positionFrontalLeftShoulder_slider = QtWidgets.QSlider(self.frontalLeftShoulder_groupBox)
                                                                                                   ^
        self.positionFrontalLeftShoulder_label = QtWidgets.QLabel(self.frontalLeftShoulder_groupBox)
                                                                                                   ^
        self.velocityFrontalLeftShoulder_slider = QtWidgets.QSlider(self.frontalLeftShoulder_groupBox)
                                                                                                   ^
        self.velocityFrontalLeftShoulder_label = QtWidgets.QLabel(self.frontalLeftShoulder_groupBox)
                                                                                                   ^
        self.velocityValueFrontalLeftShoulder_label = QtWidgets.QLabel(self.frontalLeftShoulder_groupBox)
                                                                                                   ^
        self.velocityValueFrontalLeftShoulder_label.setObjectName("velocityValueFrontalLeftShoulder_label")
                                                                                                   ^
        self.positionValueFrontalLeftShoulder_label = QtWidgets.QLabel(self.frontalLeftShoulder_groupBox)
                                                                                                   ^
        self.positionValueFrontalLeftShoulder_label.setObjectName("positionValueFrontalLeftShoulder_label")
                                                                                                   ^
        self.encoderFrontalLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.frontalLeftShoulder_groupBox)
                                                                                                   ^
./src/motorGuiLogic.py:78:100: E501 line too long (280 > 99 characters)

./src/motorGuiLogic.py:79:73: E231 missing whitespace after ':'

./src/motorGuiLogic.py:79:100: E501 line too long (280 > 99 characters)

./src/motorGuiLogic.py:80:74: E231 missing whitespace after ':'

./src/motorGuiLogic.py:80:100: E501 line too long (286 > 99 characters)

./src/motorGuiLogic.py:81:74: E231 missing whitespace after ':'

./src/motorGuiLogic.py:81:100: E501 line too long (286 > 99 characters)

./src/motorGuiLogic.py:85:100: E501 line too long (122 > 99 characters)

./src/motorGuiLogic.py:86:1: W293 blank line contains whitespace

./src/motorGuiLogic.py:90:100: E501 line too long (127 > 99 characters)

./src/motorGuiLogic.py:92:1: W293 blank line contains whitespace

./src/motorGuiLogic.py:95:11: F405 'QtWidgets' may be undefined, or defined from star imports: .motorGuiWindow, PyQt5

./src/motorGuiLogic.py:98:16: W292 no newline at end of file

./src/motorGuiNode.py:4:1: F401 'itertools' imported but unused

./src/motorGuiNode.py:9:1: E302 expected 2 blank lines, found 1

./src/motorGuiNode.py:48:9: E265 block comment should start with '# '

./src/motorGuiNode.py:66:1: E302 expected 2 blank lines, found 1

./src/motorGuiNode.py:75:1: E305 expected 2 blank lines after class or function definition, found 1

./src/motorGuiNode.py:76:11: W292 no newline at end of file

./src/motorGuiWindow.py:11:1: F401 'PyQt5.QtGui' imported but unused

./src/motorGuiWindow.py:21:76: E227 missing whitespace around bitwise or shift operator

./src/motorGuiWindow.py:21:100: E501 line too long (106 > 99 characters)

./src/motorGuiWindow.py:114:100: E501 line too long (102 > 99 characters)

./src/motorGuiWindow.py:117:100: E501 line too long (104 > 99 characters)

./src/motorGuiWindow.py:122:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:123:100: E501 line too long (104 > 99 characters)

./src/motorGuiWindow.py:127:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:128:100: E501 line too long (102 > 99 characters)

./src/motorGuiWindow.py:131:100: E501 line too long (107 > 99 characters)

./src/motorGuiWindow.py:133:100: E501 line too long (109 > 99 characters)

./src/motorGuiWindow.py:134:100: E501 line too long (107 > 99 characters)

./src/motorGuiWindow.py:136:100: E501 line too long (109 > 99 characters)

./src/motorGuiWindow.py:137:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:140:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:143:100: E501 line too long (107 > 99 characters)

./src/motorGuiWindow.py:145:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:146:100: E501 line too long (106 > 99 characters)

./src/motorGuiWindow.py:148:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:152:100: E501 line too long (104 > 99 characters)

./src/motorGuiWindow.py:154:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:155:100: E501 line too long (106 > 99 characters)

./src/motorGuiWindow.py:160:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:161:100: E501 line too long (106 > 99 characters)

./src/motorGuiWindow.py:165:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:166:100: E501 line too long (104 > 99 characters)

./src/motorGuiWindow.py:168:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:169:100: E501 line too long (109 > 99 characters)

./src/motorGuiWindow.py:171:100: E501 line too long (111 > 99 characters)

./src/motorGuiWindow.py:172:100: E501 line too long (109 > 99 characters)

./src/motorGuiWindow.py:174:100: E501 line too long (111 > 99 characters)

./src/motorGuiWindow.py:175:100: E501 line too long (102 > 99 characters)

./src/motorGuiWindow.py:178:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:181:100: E501 line too long (109 > 99 characters)

./src/motorGuiWindow.py:183:100: E501 line too long (105 > 99 characters)

./src/motorGuiWindow.py:184:100: E501 line too long (108 > 99 characters)

./src/motorGuiWindow.py:186:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:193:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:202:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:207:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:209:100: E501 line too long (105 > 99 characters)

./src/motorGuiWindow.py:210:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:212:100: E501 line too long (105 > 99 characters)

./src/motorGuiWindow.py:219:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:222:100: E501 line too long (102 > 99 characters)

./src/motorGuiWindow.py:245:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:247:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:248:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:250:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:257:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:260:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:321:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:323:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:324:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:326:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:333:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:336:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:345:100: E501 line too long (102 > 99 characters)

./src/motorGuiWindow.py:348:100: E501 line too long (104 > 99 characters)

./src/motorGuiWindow.py:352:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:353:100: E501 line too long (102 > 99 characters)

./src/motorGuiWindow.py:356:100: E501 line too long (104 > 99 characters)

./src/motorGuiWindow.py:361:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:362:100: E501 line too long (107 > 99 characters)

./src/motorGuiWindow.py:364:100: E501 line too long (109 > 99 characters)

./src/motorGuiWindow.py:365:100: E501 line too long (107 > 99 characters)

./src/motorGuiWindow.py:367:100: E501 line too long (109 > 99 characters)

./src/motorGuiWindow.py:368:100: E501 line too long (107 > 99 characters)

./src/motorGuiWindow.py:370:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:371:100: E501 line too long (106 > 99 characters)

./src/motorGuiWindow.py:373:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:374:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:377:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:402:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:405:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:438:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:440:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:441:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:443:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:444:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:447:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:459:100: E501 line too long (102 > 99 characters)

./src/motorGuiWindow.py:465:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:468:100: E501 line too long (102 > 99 characters)

./src/motorGuiWindow.py:473:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:476:100: E501 line too long (105 > 99 characters)

./src/motorGuiWindow.py:478:100: E501 line too long (107 > 99 characters)

./src/motorGuiWindow.py:479:100: E501 line too long (105 > 99 characters)

./src/motorGuiWindow.py:481:100: E501 line too long (107 > 99 characters)

./src/motorGuiWindow.py:482:100: E501 line too long (105 > 99 characters)

        self.encoderFrontalLeftShoulder_lineEdit.setObjectName("encoderFrontalLeftShoulder_lineEdit")
                                                                                                   ^
        self.torqueFrontalLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.frontalLeftShoulder_groupBox)
                                                                                                   ^
        self.positionValueFrontalLeftElbow_label.setObjectName("positionValueFrontalLeftElbow_label")
                                                                                                   ^
        self.velocityValueFrontalLeftElbow_label.setObjectName("velocityValueFrontalLeftElbow_label")
                                                                                                   ^
        self.velocityValueFrontalRightAnkle_label = QtWidgets.QLabel(self.frontalRightAnkle_groupBox)
                                                                                                   ^
        self.velocityValueFrontalRightAnkle_label.setObjectName("velocityValueFrontalRightAnkle_label")
                                                                                                   ^
        self.positionValueFrontalRightAnkle_label = QtWidgets.QLabel(self.frontalRightAnkle_groupBox)
                                                                                                   ^
        self.positionValueFrontalRightAnkle_label.setObjectName("positionValueFrontalRightAnkle_label")
                                                                                                   ^
        self.encoderFrontalRightAnkle_lineEdit = QtWidgets.QLineEdit(self.frontalRightAnkle_groupBox)
                                                                                                   ^
        self.torqueFrontalRightAnkle_lineEdit = QtWidgets.QLineEdit(self.frontalRightAnkle_groupBox)
                                                                                                   ^
        self.velocitySagittalRightAnkle_slider = QtWidgets.QSlider(self.sagittalRightAnkle_groupBox)
                                                                                                   ^
        self.positionSagittalRightAnkle_slider = QtWidgets.QSlider(self.sagittalRightAnkle_groupBox)
                                                                                                   ^
        self.positionValueSagittalRightAnkle_label = QtWidgets.QLabel(self.sagittalRightAnkle_groupBox)
                                                                                                   ^
        self.positionValueSagittalRightAnkle_label.setObjectName("positionValueSagittalRightAnkle_label")
                                                                                                   ^
        self.velocityValueSagittalRightAnkle_label = QtWidgets.QLabel(self.sagittalRightAnkle_groupBox)
                                                                                                   ^
        self.velocityValueSagittalRightAnkle_label.setObjectName("velocityValueSagittalRightAnkle_label")
                                                                                                   ^
        self.encoderSagittalRightAnkle_lineEdit = QtWidgets.QLineEdit(self.sagittalRightAnkle_groupBox)
                                                                                                   ^
        self.torqueSagittalRightAnkle_lineEdit = QtWidgets.QLineEdit(self.sagittalRightAnkle_groupBox)
                                                                                                   ^
        self.positionValueSagittalRightHip_label.setObjectName("positionValueSagittalRightHip_label")
                                                                                                   ^
        self.velocityValueSagittalRightHip_label.setObjectName("velocityValueSagittalRightHip_label")
                                                                                                   ^
        self.positionValueFrontalRightKnee_label.setObjectName("positionValueFrontalRightKnee_label")
                                                                                                   ^
        self.velocityValueFrontalRightKnee_label.setObjectName("velocityValueFrontalRightKnee_label")
                                                                                                   ^
        self.positionValueFrontalLeftAnkle_label.setObjectName("positionValueFrontalLeftAnkle_label")
                                                                                                   ^
        self.velocityValueFrontalLeftAnkle_label.setObjectName("velocityValueFrontalLeftAnkle_label")
                                                                                                   ^
        self.velocityValueSagittalLeftAnkle_label = QtWidgets.QLabel(self.sagittalLeftAnkle_groupBox)
                                                                                                   ^
        self.velocityValueSagittalLeftAnkle_label.setObjectName("velocityValueSagittalLeftAnkle_label")
                                                                                                   ^
        self.positionValueSagittalLeftAnkle_label = QtWidgets.QLabel(self.sagittalLeftAnkle_groupBox)
                                                                                                   ^
        self.positionValueSagittalLeftAnkle_label.setObjectName("positionValueSagittalLeftAnkle_label")
                                                                                                   ^
        self.encoderSagittalLeftAnkle_lineEdit = QtWidgets.QLineEdit(self.sagittalLeftAnkle_groupBox)
                                                                                                   ^
        self.torqueSagittalLeftAnkle_lineEdit = QtWidgets.QLineEdit(self.sagittalLeftAnkle_groupBox)
                                                                                                   ^
        self.buttonBox.accepted.connect(Dialog.accept) # type: ignore
                                                      ^
        self.buttonBox.rejected.connect(Dialog.reject) # type: ignore
                                                      ^
        self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.head_tab), _translate("Dialog", "/head"))
                                                                                                   ^
        self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.rightArm_tab), _translate("Dialog", "/rightArm"))
                                                                                                   ^
        self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.leftArm_tab), _translate("Dialog", "/leftArm"))
                                                                                                   ^
        self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.trunk_tab), _translate("Dialog", "/trunk"))
                                                                                                   ^
        self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.rightLeg_tab), _translate("Dialog", "/rightLeg"))
                                                                                                   ^
        self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.leftLeg_tab), _translate("Dialog", "/leftLeg"))
                                                                                                   ^
1     E227 missing whitespace around bitwise or shift operator
57    E231 missing whitespace after ':'
2     E261 at least two spaces before inline comment
1     E265 block comment should start with '# '
2     E272 multiple spaces before keyword
3     E302 expected 2 blank lines, found 1
1     E305 expected 2 blank lines after class or function definition, found 1
182   E501 line too long (235 > 99 characters)
2     F401 'itertools' imported but unused
2     F403 'from PyQt5 import *' used; unable to detect undefined names
4     F405 'QtWidgets' may be undefined, or defined from star imports: .motorGuiWindow, PyQt5
2     W292 no newline at end of file
4     W293 blank line contains whitespace
./src/motorGuiWindow.py:484:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:485:100: E501 line too long (104 > 99 characters)

./src/motorGuiWindow.py:516:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:519:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:672:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:674:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:675:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:677:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:678:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:681:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:693:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:704:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:710:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:712:100: E501 line too long (105 > 99 characters)

./src/motorGuiWindow.py:713:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:715:100: E501 line too long (105 > 99 characters)

./src/motorGuiWindow.py:716:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:719:100: E501 line too long (102 > 99 characters)

./src/motorGuiWindow.py:750:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:753:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:826:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:829:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:905:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:908:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:1055:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:1057:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:1058:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:1060:100: E501 line too long (103 > 99 characters)

./src/motorGuiWindow.py:1061:100: E501 line too long (101 > 99 characters)

./src/motorGuiWindow.py:1064:100: E501 line too long (100 > 99 characters)

./src/motorGuiWindow.py:1115:55: E261 at least two spaces before inline comment

./src/motorGuiWindow.py:1116:55: E261 at least two spaces before inline comment

./src/motorGuiWindow.py:1140:100: E501 line too long (121 > 99 characters)

./src/motorGuiWindow.py:1195:100: E501 line too long (129 > 99 characters)

./src/motorGuiWindow.py:1250:100: E501 line too long (127 > 99 characters)

./src/motorGuiWindow.py:1269:100: E501 line too long (123 > 99 characters)

./src/motorGuiWindow.py:1324:100: E501 line too long (129 > 99 characters)

./src/motorGuiWindow.py:1379:100: E501 line too long (127 > 99 characters)


4 files checked
263 errors

'E'-type errors: 249
'F'-type errors: 8
'W'-type errors: 6

Checked files:

* ./setup.py
* ./src/motorGuiLogic.py
* ./src/motorGuiNode.py
* ./src/motorGuiWindow.py
-- run_test.py: return code 1
-- run_test.py: verify result file '/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/flake8.xunit.xml'
<end of output>
Test time =   0.47 sec
----------------------------------------------------------
Test Failed.
"flake8" end time: Feb 02 11:13 CET
"flake8" time elapsed: 00:00:00
----------------------------------------------------------

2/4 Testing: lint_cmake
2/4 Test: lint_cmake
Command: "/usr/bin/python3.10" "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/lint_cmake.xunit.xml" "--package-name" "py_motor_gui" "--output-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/lint_cmake.xunit.xml"
Directory: /home/teo/ros2_motor_gui_ws/src/py_motor_gui
"lint_cmake" start time: Feb 02 11:13 CET
Output:
----------------------------------------------------------
-- run_test.py: invoking following command in '/home/teo/ros2_motor_gui_ws/src/py_motor_gui':
 - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/lint_cmake.xunit.xml

No problems found
-- run_test.py: return code 0
-- run_test.py: verify result file '/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/lint_cmake.xunit.xml'
<end of output>
Test time =   0.10 sec
----------------------------------------------------------
Test Passed.
"lint_cmake" end time: Feb 02 11:13 CET
"lint_cmake" time elapsed: 00:00:00
----------------------------------------------------------

3/4 Testing: pep257
3/4 Test: pep257
Command: "/usr/bin/python3.10" "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/pep257.xunit.xml" "--package-name" "py_motor_gui" "--output-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/ament_pep257/pep257.txt" "--command" "/opt/ros/humble/bin/ament_pep257" "--xunit-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/pep257.xunit.xml"
Directory: /home/teo/ros2_motor_gui_ws/src/py_motor_gui
"pep257" start time: Feb 02 11:13 CET
Output:
----------------------------------------------------------
-- run_test.py: invoking following command in '/home/teo/ros2_motor_gui_ws/src/py_motor_gui':
 - /opt/ros/humble/bin/ament_pep257 --xunit-file /home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/pep257.xunit.xml
checking ./setup.py
checking ./src/motorGuiLogic.py
checking ./src/motorGuiNode.py
checking ./src/motorGuiWindow.py
No problems found
-- run_test.py: return code 0
-- run_test.py: verify result file '/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/pep257.xunit.xml'
<end of output>
Test time =   0.22 sec
----------------------------------------------------------
Test Passed.
"pep257" end time: Feb 02 11:13 CET
"pep257" time elapsed: 00:00:00
----------------------------------------------------------

4/4 Testing: xmllint
4/4 Test: xmllint
Command: "/usr/bin/python3.10" "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/xmllint.xunit.xml" "--package-name" "py_motor_gui" "--output-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/xmllint.xunit.xml"
Directory: /home/teo/ros2_motor_gui_ws/src/py_motor_gui
"xmllint" start time: Feb 02 11:13 CET
Output:
----------------------------------------------------------
-- run_test.py: invoking following command in '/home/teo/ros2_motor_gui_ws/src/py_motor_gui':
 - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/xmllint.xunit.xml
File 'package.xml' is valid

No problems found
-- run_test.py: return code 0
-- run_test.py: verify result file '/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/xmllint.xunit.xml'
<end of output>
Test time =   0.92 sec
----------------------------------------------------------
Test Passed.
"xmllint" end time: Feb 02 11:13 CET
"xmllint" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Feb 02 11:13 CET

flake8 =   0.47 sec*proc

lint_cmake =   0.10 sec*proc

linter =   1.71 sec*proc

pep257 =   0.22 sec*proc

xmllint =   0.92 sec*proc

