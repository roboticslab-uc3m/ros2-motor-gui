[0.000000] (-) TimerEvent: {}
[0.000178] (py_motor_gui) JobQueued: {'identifier': 'py_motor_gui', 'dependencies': OrderedDict([('py_motor_gui', '/home/teo/ros2_motor_gui_ws/install/py_motor_gui')])}
[0.000218] (py_motor_gui) JobStarted: {'identifier': 'py_motor_gui'}
[0.065446] (py_motor_gui) Command: {'cmd': ['/usr/bin/ctest', '-C', 'Release', '-D', 'ExperimentalTest', '--no-compress-output', '-V', '--force-new-ctest-process'], 'cwd': '/home/teo/ros2_motor_gui_ws/build/py_motor_gui', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'teo'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('WT_PROFILE_ID', '{17bf3de4-5353-5709-bcf9-835bd952a95e}'), ('MOTD_SHOWN', 'update-motd'), ('HOME', '/home/teo'), ('OLDPWD', '/home/teo/ros2_motor_gui_ws/src'), ('ROS_PYTHON_VERSION', '3'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('WSL_DISTRO_NAME', 'Ubuntu-22.04'), ('WAYLAND_DISPLAY', 'wayland-0'), ('COLCON_PREFIX_PATH', '/home/teo/ros2_motor_gui_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'teo'), ('NAME', 'Armega'), ('WSL_INTEROP', '/run/WSL/355_interop'), ('PULSE_SERVER', 'unix:/mnt/wslg/PulseServer'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('TERM', 'xterm-256color'), ('GAZEBO_MODEL_PATH', '/usr/local/share/gazebo/models:'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/home/teo/.local/bin:/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/VMware/VMware Workstation/bin/:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/dotnet/:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Git/cmd:/mnt/c/Users/sanma/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/sanma/AppData/Local/Programs/Microsoft VS Code/bin:/snap/bin'), ('WT_SESSION', 'acef6969-08da-448f-8ca7-3c61f9051a31'), ('XDG_RUNTIME_DIR', '/run/user/1000/'), ('DISPLAY', ':0'), ('LANG', 'C.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('AMENT_PREFIX_PATH', '/home/teo/ros2_motor_gui_ws/install/py_motor_gui:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('PWD', '/home/teo/ros2_motor_gui_ws/build/py_motor_gui'), ('XDG_DATA_DIRS', '/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('WSL2_GUI_APPS_ENABLED', '1'), ('HOSTTYPE', 'x86_64'), ('CMAKE_PREFIX_PATH', '/home/teo/ros2_motor_gui_ws/install/py_motor_gui'), ('WSLENV', 'WT_SESSION:WT_PROFILE_ID:')]), 'shell': False}
[0.070256] (py_motor_gui) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/teo/ros2_motor_gui_ws/build/py_motor_gui/CTestConfiguration.ini\n'}
[0.070444] (py_motor_gui) StdoutLine: {'line': b'Parse Config file:/home/teo/ros2_motor_gui_ws/build/py_motor_gui/CTestConfiguration.ini\n'}
[0.070535] (py_motor_gui) StdoutLine: {'line': b'   Site: Armega\n'}
[0.070616] (py_motor_gui) StdoutLine: {'line': b'   Build name: (empty)\n'}
[0.070697] (py_motor_gui) StdoutLine: {'line': b' Add coverage exclude regular expressions.\n'}
[0.070777] (py_motor_gui) StdoutLine: {'line': b'Create new tag: 20240202-1013 - Experimental\n'}
[0.070917] (py_motor_gui) StdoutLine: {'line': b'UpdateCTestConfiguration  from :/home/teo/ros2_motor_gui_ws/build/py_motor_gui/CTestConfiguration.ini\n'}
[0.071092] (py_motor_gui) StdoutLine: {'line': b'Parse Config file:/home/teo/ros2_motor_gui_ws/build/py_motor_gui/CTestConfiguration.ini\n'}
[0.071139] (py_motor_gui) StdoutLine: {'line': b'Test project /home/teo/ros2_motor_gui_ws/build/py_motor_gui\n'}
[0.071168] (py_motor_gui) StdoutLine: {'line': b'Constructing a list of tests\n'}
[0.071194] (py_motor_gui) StdoutLine: {'line': b'Done constructing a list of tests\n'}
[0.071222] (py_motor_gui) StdoutLine: {'line': b'Updating test list for fixtures\n'}
[0.071248] (py_motor_gui) StdoutLine: {'line': b'Added 0 tests to meet fixture requirements\n'}
[0.071273] (py_motor_gui) StdoutLine: {'line': b'Checking test dependency graph...\n'}
[0.071299] (py_motor_gui) StdoutLine: {'line': b'Checking test dependency graph end\n'}
[0.071322] (py_motor_gui) StdoutLine: {'line': b'test 1\n'}
[0.071345] (py_motor_gui) StdoutLine: {'line': b'    Start 1: flake8\n'}
[0.071369] (py_motor_gui) StdoutLine: {'line': b'\n'}
[0.071394] (py_motor_gui) StdoutLine: {'line': b'1: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/flake8.xunit.xml" "--package-name" "py_motor_gui" "--output-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/ament_flake8/flake8.txt" "--command" "/opt/ros/humble/bin/ament_flake8" "--xunit-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/flake8.xunit.xml"\n'}
[0.071443] (py_motor_gui) StdoutLine: {'line': b'1: Test timeout computed to be: 60\n'}
[0.101220] (-) TimerEvent: {}
[0.104918] (py_motor_gui) StdoutLine: {'line': b"1: -- run_test.py: invoking following command in '/home/teo/ros2_motor_gui_ws/src/py_motor_gui':\n"}
[0.105014] (py_motor_gui) StdoutLine: {'line': b'1:  - /opt/ros/humble/bin/ament_flake8 --xunit-file /home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/flake8.xunit.xml\n'}
[0.209311] (-) TimerEvent: {}
[0.309854] (-) TimerEvent: {}
[0.412124] (-) TimerEvent: {}
[0.511445] (py_motor_gui) StdoutLine: {'line': b'1: from PyQt5           import *\n'}
[0.511591] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.511752] (py_motor_gui) StdoutLine: {'line': b'1: from PyQt5           import *\n'}
[0.511845] (py_motor_gui) StdoutLine: {'line': b'1:           ^\n'}
[0.511926] (py_motor_gui) StdoutLine: {'line': b'1: from .motorGuiNode   import WindowSubscriber\n'}
[0.512007] (py_motor_gui) StdoutLine: {'line': b'1:                   ^\n'}
[0.512092] (py_motor_gui) StdoutLine: {'line': b'1: from .motorGuiWindow import *\n'}
[0.512135] (-) TimerEvent: {}
[0.512201] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.512239] (py_motor_gui) StdoutLine: {'line': b'1: class MainWindow(QtWidgets.QMainWindow, Ui_Dialog):\n'}
[0.512268] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.512294] (py_motor_gui) StdoutLine: {'line': b'1: class MainWindow(QtWidgets.QMainWindow, Ui_Dialog):\n'}
[0.512320] (py_motor_gui) StdoutLine: {'line': b'1:                  ^\n'}
[0.512345] (py_motor_gui) StdoutLine: {'line': b'1: class MainWindow(QtWidgets.QMainWindow, Ui_Dialog):\n'}
[0.512420] (py_motor_gui) StdoutLine: {'line': b'1:                                         ^\n'}
[0.512455] (py_motor_gui) StdoutLine: {'line': b'1:         QtWidgets.QMainWindow.__init__(self, *args, **kwargs)\n'}
[0.512483] (py_motor_gui) StdoutLine: {'line': b'1:         ^\n'}
[0.512511] (py_motor_gui) StdoutLine: {'line': b'1:     \n'}
[0.512555] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.512626] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialNeck_slider, self.velocityAxialNeck_slider, self.positionValueAxialNeck_label, self.velocityValueAxialNeck_label, 'AxialNeck', 'neck'))\n"}
[0.512707] (py_motor_gui) StdoutLine: {'line': b'1:                                                                  ^\n'}
[0.512787] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialNeck_slider, self.velocityAxialNeck_slider, self.positionValueAxialNeck_label, self.velocityValueAxialNeck_label, 'AxialNeck', 'neck'))\n"}
[0.512865] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.512947] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialNeck_slider, self.velocityAxialNeck_slider, self.positionValueAxialNeck_label, self.velocityValueAxialNeck_label, 'AxialNeck', 'neck'))\n"}
[0.513025] (py_motor_gui) StdoutLine: {'line': b'1:                                                                  ^\n'}
[0.513103] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialNeck_slider, self.velocityAxialNeck_slider, self.positionValueAxialNeck_label, self.velocityValueAxialNeck_label, 'AxialNeck', 'neck'))\n"}
[0.513182] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.513261] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalNeck_slider, self.velocityFrontalNeck_slider, self.positionValueFrontalNeck_label, self.velocityValueFrontalNeck_label, 'FrontalNeck', 'neck'))\n"}
[0.513473] (py_motor_gui) StdoutLine: {'line': b'1:                                                                    ^\n'}
[0.513721] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalNeck_slider, self.velocityFrontalNeck_slider, self.positionValueFrontalNeck_label, self.velocityValueFrontalNeck_label, 'FrontalNeck', 'neck'))\n"}
[0.513811] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.513900] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalNeck_slider, self.velocityFrontalNeck_slider, self.positionValueFrontalNeck_label, self.velocityValueFrontalNeck_label, 'FrontalNeck', 'neck'))\n"}
[0.513991] (py_motor_gui) StdoutLine: {'line': b'1:                                                                    ^\n'}
[0.514078] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalNeck_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalNeck_slider, self.velocityFrontalNeck_slider, self.positionValueFrontalNeck_label, self.velocityValueFrontalNeck_label, 'FrontalNeck', 'neck'))\n"}
[0.514174] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.514279] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightShoulder_slider, self.velocityFrontalRightShoulder_slider, self.positionValueFrontalRightShoulder_label, self.velocityValueFrontalRightShoulder_label, 'FrontalRightShoulder', 'rightArm'))\n"}
[0.514320] (py_motor_gui) StdoutLine: {'line': b'1:                                                                             ^\n'}
[0.514350] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightShoulder_slider, self.velocityFrontalRightShoulder_slider, self.positionValueFrontalRightShoulder_label, self.velocityValueFrontalRightShoulder_label, 'FrontalRightShoulder', 'rightArm'))\n"}
[0.514377] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.514416] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightShoulder_slider, self.velocityFrontalRightShoulder_slider, self.positionValueFrontalRightShoulder_label, self.velocityValueFrontalRightShoulder_label, 'FrontalRightShoulder', 'rightArm'))\n"}
[0.514498] (py_motor_gui) StdoutLine: {'line': b'1:                                                                             ^\n'}
[0.514579] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightShoulder_slider, self.velocityFrontalRightShoulder_slider, self.positionValueFrontalRightShoulder_label, self.velocityValueFrontalRightShoulder_label, 'FrontalRightShoulder', 'rightArm'))\n"}
[0.514626] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.514690] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightShoulder_slider, self.velocitySagittalRightShoulder_slider, self.positionValueSagittalRightShoulder_label, self.velocityValueSagittalRightShoulder_label, 'SagittalRightShoulder', 'rightArm'))\n"}
[0.514770] (py_motor_gui) StdoutLine: {'line': b'1:                                                                              ^\n'}
[0.514848] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightShoulder_slider, self.velocitySagittalRightShoulder_slider, self.positionValueSagittalRightShoulder_label, self.velocityValueSagittalRightShoulder_label, 'SagittalRightShoulder', 'rightArm'))\n"}
[0.514927] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.515005] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightShoulder_slider, self.velocitySagittalRightShoulder_slider, self.positionValueSagittalRightShoulder_label, self.velocityValueSagittalRightShoulder_label, 'SagittalRightShoulder', 'rightArm'))\n"}
[0.515086] (py_motor_gui) StdoutLine: {'line': b'1:                                                                              ^\n'}
[0.515966] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightShoulder_slider, self.velocitySagittalRightShoulder_slider, self.positionValueSagittalRightShoulder_label, self.velocityValueSagittalRightShoulder_label, 'SagittalRightShoulder', 'rightArm'))\n"}
[0.516074] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.516158] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightShoulder_slider, self.velocityAxialRightShoulder_slider, self.positionValueAxialRightShoulder_label, self.velocityValueAxialRightShoulder_label, 'AxialRightShoulder', 'rightArm'))\n"}
[0.516379] (py_motor_gui) StdoutLine: {'line': b'1:                                                                           ^\n'}
[0.516456] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightShoulder_slider, self.velocityAxialRightShoulder_slider, self.positionValueAxialRightShoulder_label, self.velocityValueAxialRightShoulder_label, 'AxialRightShoulder', 'rightArm'))\n"}
[0.516502] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.516567] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightShoulder_slider, self.velocityAxialRightShoulder_slider, self.positionValueAxialRightShoulder_label, self.velocityValueAxialRightShoulder_label, 'AxialRightShoulder', 'rightArm'))\n"}
[0.516824] (py_motor_gui) StdoutLine: {'line': b'1:                                                                           ^\n'}
[0.517316] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialRightShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightShoulder_slider, self.velocityAxialRightShoulder_slider, self.positionValueAxialRightShoulder_label, self.velocityValueAxialRightShoulder_label, 'AxialRightShoulder', 'rightArm'))\n"}
[0.517374] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.517576] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightElbow_slider, self.velocityFrontalRightElbow_slider, self.positionValueFrontalRightElbow_label, self.velocityValueFrontalRightElbow_label, 'FrontalRightElbow', 'rightArm'))\n"}
[0.517968] (py_motor_gui) StdoutLine: {'line': b'1:                                                                          ^\n'}
[0.518011] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightElbow_slider, self.velocityFrontalRightElbow_slider, self.positionValueFrontalRightElbow_label, self.velocityValueFrontalRightElbow_label, 'FrontalRightElbow', 'rightArm'))\n"}
[0.518044] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.518075] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightElbow_slider, self.velocityFrontalRightElbow_slider, self.positionValueFrontalRightElbow_label, self.velocityValueFrontalRightElbow_label, 'FrontalRightElbow', 'rightArm'))\n"}
[0.518108] (py_motor_gui) StdoutLine: {'line': b'1:                                                                          ^\n'}
[0.518136] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightElbow_slider, self.velocityFrontalRightElbow_slider, self.positionValueFrontalRightElbow_label, self.velocityValueFrontalRightElbow_label, 'FrontalRightElbow', 'rightArm'))\n"}
[0.518165] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.518193] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightWrist_slider, self.velocityAxialRightWrist_slider, self.positionValueAxialRightWrist_label, self.velocityValueAxialRightWrist_label, 'AxialRightWrist', 'rightArm'))\n"}
[0.518237] (py_motor_gui) StdoutLine: {'line': b'1:                                                                        ^\n'}
[0.518265] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightWrist_slider, self.velocityAxialRightWrist_slider, self.positionValueAxialRightWrist_label, self.velocityValueAxialRightWrist_label, 'AxialRightWrist', 'rightArm'))\n"}
[0.518296] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.518322] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightWrist_slider, self.velocityAxialRightWrist_slider, self.positionValueAxialRightWrist_label, self.velocityValueAxialRightWrist_label, 'AxialRightWrist', 'rightArm'))\n"}
[0.518347] (py_motor_gui) StdoutLine: {'line': b'1:                                                                        ^\n'}
[0.518371] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightWrist_slider, self.velocityAxialRightWrist_slider, self.positionValueAxialRightWrist_label, self.velocityValueAxialRightWrist_label, 'AxialRightWrist', 'rightArm'))\n"}
[0.518399] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.518422] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightWrist_slider, self.velocityFrontalRightWrist_slider, self.positionValueFrontalRightWrist_label, self.velocityValueFrontalRightWrist_label, 'FrontalRightWrist', 'rightArm'))\n"}
[0.518445] (py_motor_gui) StdoutLine: {'line': b'1:                                                                          ^\n'}
[0.518471] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightWrist_slider, self.velocityFrontalRightWrist_slider, self.positionValueFrontalRightWrist_label, self.velocityValueFrontalRightWrist_label, 'FrontalRightWrist', 'rightArm'))\n"}
[0.518495] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.518519] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightWrist_slider, self.velocityFrontalRightWrist_slider, self.positionValueFrontalRightWrist_label, self.velocityValueFrontalRightWrist_label, 'FrontalRightWrist', 'rightArm'))\n"}
[0.518544] (py_motor_gui) StdoutLine: {'line': b'1:                                                                          ^\n'}
[0.518568] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightWrist_slider, self.velocityFrontalRightWrist_slider, self.positionValueFrontalRightWrist_label, self.velocityValueFrontalRightWrist_label, 'FrontalRightWrist', 'rightArm'))\n"}
[0.518593] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.518617] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftShoulder_slider, self.velocityFrontalLeftShoulder_slider, self.positionValueFrontalLeftShoulder_label, self.velocityValueFrontalLeftShoulder_label, 'FrontalLeftShoulder', 'leftArm'))\n"}
[0.518644] (py_motor_gui) StdoutLine: {'line': b'1:                                                                            ^\n'}
[0.518668] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftShoulder_slider, self.velocityFrontalLeftShoulder_slider, self.positionValueFrontalLeftShoulder_label, self.velocityValueFrontalLeftShoulder_label, 'FrontalLeftShoulder', 'leftArm'))\n"}
[0.518696] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.518733] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftShoulder_slider, self.velocityFrontalLeftShoulder_slider, self.positionValueFrontalLeftShoulder_label, self.velocityValueFrontalLeftShoulder_label, 'FrontalLeftShoulder', 'leftArm'))\n"}
[0.518757] (py_motor_gui) StdoutLine: {'line': b'1:                                                                            ^\n'}
[0.518783] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftShoulder_slider, self.velocityFrontalLeftShoulder_slider, self.positionValueFrontalLeftShoulder_label, self.velocityValueFrontalLeftShoulder_label, 'FrontalLeftShoulder', 'leftArm'))\n"}
[0.518807] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.518829] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftShoulder_slider, self.velocitySagittalLeftShoulder_slider, self.positionValueSagittalLeftShoulder_label, self.velocityValueSagittalLeftShoulder_label, 'SagittalLeftShoulder', 'leftArm'))\n"}
[0.518853] (py_motor_gui) StdoutLine: {'line': b'1:                                                                             ^\n'}
[0.518874] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftShoulder_slider, self.velocitySagittalLeftShoulder_slider, self.positionValueSagittalLeftShoulder_label, self.velocityValueSagittalLeftShoulder_label, 'SagittalLeftShoulder', 'leftArm'))\n"}
[0.518898] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.518928] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftShoulder_slider, self.velocitySagittalLeftShoulder_slider, self.positionValueSagittalLeftShoulder_label, self.velocityValueSagittalLeftShoulder_label, 'SagittalLeftShoulder', 'leftArm'))\n"}
[0.518951] (py_motor_gui) StdoutLine: {'line': b'1:                                                                             ^\n'}
[0.518973] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftShoulder_slider, self.velocitySagittalLeftShoulder_slider, self.positionValueSagittalLeftShoulder_label, self.velocityValueSagittalLeftShoulder_label, 'SagittalLeftShoulder', 'leftArm'))\n"}
[0.518996] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.519019] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftShoulder_slider, self.velocityAxialLeftShoulder_slider, self.positionValueAxialLeftShoulder_label, self.velocityValueAxialLeftShoulder_label, 'AxialLeftShoulder', 'leftArm'))\n"}
[0.519045] (py_motor_gui) StdoutLine: {'line': b'1:                                                                          ^\n'}
[0.519069] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftShoulder_slider, self.velocityAxialLeftShoulder_slider, self.positionValueAxialLeftShoulder_label, self.velocityValueAxialLeftShoulder_label, 'AxialLeftShoulder', 'leftArm'))\n"}
[0.519093] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.519116] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftShoulder_slider, self.velocityAxialLeftShoulder_slider, self.positionValueAxialLeftShoulder_label, self.velocityValueAxialLeftShoulder_label, 'AxialLeftShoulder', 'leftArm'))\n"}
[0.519140] (py_motor_gui) StdoutLine: {'line': b'1:                                                                          ^\n'}
[0.519163] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialLeftShoulder_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftShoulder_slider, self.velocityAxialLeftShoulder_slider, self.positionValueAxialLeftShoulder_label, self.velocityValueAxialLeftShoulder_label, 'AxialLeftShoulder', 'leftArm'))\n"}
[0.519187] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.519209] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftElbow_slider, self.velocityFrontalLeftElbow_slider, self.positionValueFrontalLeftElbow_label, self.velocityValueFrontalLeftElbow_label, 'FrontalLeftElbow', 'leftArm'))\n"}
[0.519232] (py_motor_gui) StdoutLine: {'line': b'1:                                                                         ^\n'}
[0.519253] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftElbow_slider, self.velocityFrontalLeftElbow_slider, self.positionValueFrontalLeftElbow_label, self.velocityValueFrontalLeftElbow_label, 'FrontalLeftElbow', 'leftArm'))\n"}
[0.519279] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.519301] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftElbow_slider, self.velocityFrontalLeftElbow_slider, self.positionValueFrontalLeftElbow_label, self.velocityValueFrontalLeftElbow_label, 'FrontalLeftElbow', 'leftArm'))\n"}
[0.519323] (py_motor_gui) StdoutLine: {'line': b'1:                                                                         ^\n'}
[0.519349] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftElbow_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftElbow_slider, self.velocityFrontalLeftElbow_slider, self.positionValueFrontalLeftElbow_label, self.velocityValueFrontalLeftElbow_label, 'FrontalLeftElbow', 'leftArm'))\n"}
[0.519374] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.519399] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftWrist_slider, self.velocityAxialLeftWrist_slider, self.positionValueAxialLeftWrist_label, self.velocityValueAxialLeftWrist_label, 'AxialLeftWrist', 'leftArm'))\n"}
[0.519428] (py_motor_gui) StdoutLine: {'line': b'1:                                                                       ^\n'}
[0.519453] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftWrist_slider, self.velocityAxialLeftWrist_slider, self.positionValueAxialLeftWrist_label, self.velocityValueAxialLeftWrist_label, 'AxialLeftWrist', 'leftArm'))\n"}
[0.519478] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.519502] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftWrist_slider, self.velocityAxialLeftWrist_slider, self.positionValueAxialLeftWrist_label, self.velocityValueAxialLeftWrist_label, 'AxialLeftWrist', 'leftArm'))\n"}
[0.519525] (py_motor_gui) StdoutLine: {'line': b'1:                                                                       ^\n'}
[0.519549] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftWrist_slider, self.velocityAxialLeftWrist_slider, self.positionValueAxialLeftWrist_label, self.velocityValueAxialLeftWrist_label, 'AxialLeftWrist', 'leftArm'))\n"}
[0.519573] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.519596] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftWrist_slider, self.velocityFrontalLeftWrist_slider, self.positionValueFrontalLeftWrist_label, self.velocityValueFrontalLeftWrist_label, 'FrontalLeftWrist', 'leftArm'))\n"}
[0.519620] (py_motor_gui) StdoutLine: {'line': b'1:                                                                         ^\n'}
[0.519642] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftWrist_slider, self.velocityFrontalLeftWrist_slider, self.positionValueFrontalLeftWrist_label, self.velocityValueFrontalLeftWrist_label, 'FrontalLeftWrist', 'leftArm'))\n"}
[0.519666] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.519689] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftWrist_slider, self.velocityFrontalLeftWrist_slider, self.positionValueFrontalLeftWrist_label, self.velocityValueFrontalLeftWrist_label, 'FrontalLeftWrist', 'leftArm'))\n"}
[0.519716] (py_motor_gui) StdoutLine: {'line': b'1:                                                                         ^\n'}
[0.519741] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftWrist_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftWrist_slider, self.velocityFrontalLeftWrist_slider, self.positionValueFrontalLeftWrist_label, self.velocityValueFrontalLeftWrist_label, 'FrontalLeftWrist', 'leftArm'))\n"}
[0.519766] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.519790] (py_motor_gui) StdoutLine: {'line': b'1:      \n'}
[0.519815] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.519840] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialTrunk_slider, self.velocityAxialTrunk_slider, self.positionValueAxialTrunk_label, self.velocityValueAxialTrunk_label, 'AxialTrunk', 'trunk'))\n"}
[0.519993] (py_motor_gui) StdoutLine: {'line': b'1:                                                                   ^\n'}
[0.520032] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialTrunk_slider, self.velocityAxialTrunk_slider, self.positionValueAxialTrunk_label, self.velocityValueAxialTrunk_label, 'AxialTrunk', 'trunk'))\n"}
[0.520060] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.520091] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialTrunk_slider, self.velocityAxialTrunk_slider, self.positionValueAxialTrunk_label, self.velocityValueAxialTrunk_label, 'AxialTrunk', 'trunk'))\n"}
[0.520119] (py_motor_gui) StdoutLine: {'line': b'1:                                                                   ^\n'}
[0.520144] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialTrunk_slider, self.velocityAxialTrunk_slider, self.positionValueAxialTrunk_label, self.velocityValueAxialTrunk_label, 'AxialTrunk', 'trunk'))\n"}
[0.520277] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.520314] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalTrunk_slider, self.velocityFrontalTrunk_slider, self.positionValueFrontalTrunk_label, self.velocityValueFrontalTrunk_label, 'FrontalTrunk', 'trunk'))\n"}
[0.520347] (py_motor_gui) StdoutLine: {'line': b'1:                                                                     ^\n'}
[0.520373] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalTrunk_slider, self.velocityFrontalTrunk_slider, self.positionValueFrontalTrunk_label, self.velocityValueFrontalTrunk_label, 'FrontalTrunk', 'trunk'))\n"}
[0.520400] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.520424] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalTrunk_slider, self.velocityFrontalTrunk_slider, self.positionValueFrontalTrunk_label, self.velocityValueFrontalTrunk_label, 'FrontalTrunk', 'trunk'))\n"}
[0.520450] (py_motor_gui) StdoutLine: {'line': b'1:                                                                     ^\n'}
[0.520474] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalTrunk_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalTrunk_slider, self.velocityFrontalTrunk_slider, self.positionValueFrontalTrunk_label, self.velocityValueFrontalTrunk_label, 'FrontalTrunk', 'trunk'))\n"}
[0.520498] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.520522] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightHip_slider, self.velocityAxialRightHip_slider, self.positionValueAxialRightHip_label, self.velocityValueAxialRightHip_label, 'AxialRightHip', 'rightLeg'))\n"}
[0.520547] (py_motor_gui) StdoutLine: {'line': b'1:                                                                      ^\n'}
[0.520574] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightHip_slider, self.velocityAxialRightHip_slider, self.positionValueAxialRightHip_label, self.velocityValueAxialRightHip_label, 'AxialRightHip', 'rightLeg'))\n"}
[0.520598] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.520622] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightHip_slider, self.velocityAxialRightHip_slider, self.positionValueAxialRightHip_label, self.velocityValueAxialRightHip_label, 'AxialRightHip', 'rightLeg'))\n"}
[0.520712] (py_motor_gui) StdoutLine: {'line': b'1:                                                                      ^\n'}
[0.520760] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialRightHip_slider, self.velocityAxialRightHip_slider, self.positionValueAxialRightHip_label, self.velocityValueAxialRightHip_label, 'AxialRightHip', 'rightLeg'))\n"}
[0.520791] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.520819] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightHip_slider, self.velocitySagittalRightHip_slider, self.positionValueSagittalRightHip_label, self.velocityValueSagittalRightHip_label,'SagittalRightHip', 'rightLeg'))\n"}
[0.520845] (py_motor_gui) StdoutLine: {'line': b'1:                                                                         ^\n'}
[0.520870] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightHip_slider, self.velocitySagittalRightHip_slider, self.positionValueSagittalRightHip_label, self.velocityValueSagittalRightHip_label,'SagittalRightHip', 'rightLeg'))\n"}
[0.520894] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.520918] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightHip_slider, self.velocitySagittalRightHip_slider, self.positionValueSagittalRightHip_label, self.velocityValueSagittalRightHip_label,'SagittalRightHip', 'rightLeg'))\n"}
[0.520942] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                                                                                                                                                                        ^\n'}
[0.520966] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightHip_slider, self.velocitySagittalRightHip_slider, self.positionValueSagittalRightHip_label, self.velocityValueSagittalRightHip_label, 'SagittalRightHip', 'rightLeg'))\n"}
[0.520998] (py_motor_gui) StdoutLine: {'line': b'1:                                                                         ^\n'}
[0.521021] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightHip_slider, self.velocitySagittalRightHip_slider, self.positionValueSagittalRightHip_label, self.velocityValueSagittalRightHip_label, 'SagittalRightHip', 'rightLeg'))\n"}
[0.521046] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.521071] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightHip_slider, self.velocityFrontalRightHip_slider, self.positionValueFrontalRightHip_label, self.velocityValueFrontalRightHip_label, 'FrontalRightHip', 'rightLeg'))\n"}
[0.521098] (py_motor_gui) StdoutLine: {'line': b'1:                                                                        ^\n'}
[0.521141] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightHip_slider, self.velocityFrontalRightHip_slider, self.positionValueFrontalRightHip_label, self.velocityValueFrontalRightHip_label, 'FrontalRightHip', 'rightLeg'))\n"}
[0.521174] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.521201] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightHip_slider, self.velocityFrontalRightHip_slider, self.positionValueFrontalRightHip_label, self.velocityValueFrontalRightHip_label, 'FrontalRightHip', 'rightLeg'))\n"}
[0.521229] (py_motor_gui) StdoutLine: {'line': b'1:                                                                        ^\n'}
[0.521255] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightHip_slider, self.velocityFrontalRightHip_slider, self.positionValueFrontalRightHip_label, self.velocityValueFrontalRightHip_label, 'FrontalRightHip', 'rightLeg'))\n"}
[0.521280] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.521306] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightKnee_slider, self.velocityFrontalRightKnee_slider, self.positionValueFrontalRightKnee_label, self.velocityValueFrontalRightKnee_label, 'FrontalRightKnee', 'rightLeg'))\n"}
[0.521331] (py_motor_gui) StdoutLine: {'line': b'1:                                                                         ^\n'}
[0.521355] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightKnee_slider, self.velocityFrontalRightKnee_slider, self.positionValueFrontalRightKnee_label, self.velocityValueFrontalRightKnee_label, 'FrontalRightKnee', 'rightLeg'))\n"}
[0.521382] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.521406] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightKnee_slider, self.velocityFrontalRightKnee_slider, self.positionValueFrontalRightKnee_label, self.velocityValueFrontalRightKnee_label, 'FrontalRightKnee', 'rightLeg'))\n"}
[0.521432] (py_motor_gui) StdoutLine: {'line': b'1:                                                                         ^\n'}
[0.521456] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightKnee_slider, self.velocityFrontalRightKnee_slider, self.positionValueFrontalRightKnee_label, self.velocityValueFrontalRightKnee_label, 'FrontalRightKnee', 'rightLeg'))\n"}
[0.521480] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.521504] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightAnkle_slider, self.velocityFrontalRightAnkle_slider, self.positionValueFrontalRightAnkle_label, self.velocityValueFrontalRightAnkle_label, 'FrontalRightAnkle', 'rightLeg'))\n"}
[0.521529] (py_motor_gui) StdoutLine: {'line': b'1:                                                                          ^\n'}
[0.521552] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightAnkle_slider, self.velocityFrontalRightAnkle_slider, self.positionValueFrontalRightAnkle_label, self.velocityValueFrontalRightAnkle_label, 'FrontalRightAnkle', 'rightLeg'))\n"}
[0.521578] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.521601] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightAnkle_slider, self.velocityFrontalRightAnkle_slider, self.positionValueFrontalRightAnkle_label, self.velocityValueFrontalRightAnkle_label, 'FrontalRightAnkle', 'rightLeg'))\n"}
[0.521625] (py_motor_gui) StdoutLine: {'line': b'1:                                                                          ^\n'}
[0.521648] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalRightAnkle_slider, self.velocityFrontalRightAnkle_slider, self.positionValueFrontalRightAnkle_label, self.velocityValueFrontalRightAnkle_label, 'FrontalRightAnkle', 'rightLeg'))\n"}
[0.521673] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.521699] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightAnkle_slider, self.velocitySagittalRightAnkle_slider, self.positionValueSagittalRightAnkle_label, self.velocityValueSagittalRightAnkle_label, 'SagittalRightAnkle', 'rightLeg'))\n"}
[0.521724] (py_motor_gui) StdoutLine: {'line': b'1:                                                                           ^\n'}
[0.521747] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightAnkle_slider, self.velocitySagittalRightAnkle_slider, self.positionValueSagittalRightAnkle_label, self.velocityValueSagittalRightAnkle_label, 'SagittalRightAnkle', 'rightLeg'))\n"}
[0.521772] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.521795] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightAnkle_slider, self.velocitySagittalRightAnkle_slider, self.positionValueSagittalRightAnkle_label, self.velocityValueSagittalRightAnkle_label, 'SagittalRightAnkle', 'rightLeg'))\n"}
[0.521820] (py_motor_gui) StdoutLine: {'line': b'1:                                                                           ^\n'}
[0.521843] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalRightAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalRightAnkle_slider, self.velocitySagittalRightAnkle_slider, self.positionValueSagittalRightAnkle_label, self.velocityValueSagittalRightAnkle_label, 'SagittalRightAnkle', 'rightLeg'))\n"}
[0.521869] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.521893] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftHip_slider, self.velocityAxialLeftHip_slider, self.positionValueAxialLeftHip_label, self.velocityValueAxialLeftHip_label, 'AxialLeftHip', 'leftLeg'))\n"}
[0.521917] (py_motor_gui) StdoutLine: {'line': b'1:                                                                     ^\n'}
[0.521940] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionAxialLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftHip_slider, self.velocityAxialLeftHip_slider, self.positionValueAxialLeftHip_label, self.velocityValueAxialLeftHip_label, 'AxialLeftHip', 'leftLeg'))\n"}
[0.521964] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.521987] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftHip_slider, self.velocityAxialLeftHip_slider, self.positionValueAxialLeftHip_label, self.velocityValueAxialLeftHip_label, 'AxialLeftHip', 'leftLeg'))\n"}
[0.522010] (py_motor_gui) StdoutLine: {'line': b'1:                                                                     ^\n'}
[0.522033] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityAxialLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionAxialLeftHip_slider, self.velocityAxialLeftHip_slider, self.positionValueAxialLeftHip_label, self.velocityValueAxialLeftHip_label, 'AxialLeftHip', 'leftLeg'))\n"}
[0.522059] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.522083] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftHip_slider, self.velocitySagittalLeftHip_slider, self.positionValueSagittalLeftHip_label, self.velocityValueSagittalLeftHip_label, 'SagittalLeftHip', 'leftLeg'))\n"}
[0.522110] (py_motor_gui) StdoutLine: {'line': b'1:                                                                        ^\n'}
[0.522133] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftHip_slider, self.velocitySagittalLeftHip_slider, self.positionValueSagittalLeftHip_label, self.velocityValueSagittalLeftHip_label, 'SagittalLeftHip', 'leftLeg'))\n"}
[0.522156] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.522179] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftHip_slider, self.velocitySagittalLeftHip_slider, self.positionValueSagittalLeftHip_label, self.velocityValueSagittalLeftHip_label, 'SagittalLeftHip', 'leftLeg'))\n"}
[0.522203] (py_motor_gui) StdoutLine: {'line': b'1:                                                                        ^\n'}
[0.522226] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftHip_slider, self.velocitySagittalLeftHip_slider, self.positionValueSagittalLeftHip_label, self.velocityValueSagittalLeftHip_label, 'SagittalLeftHip', 'leftLeg'))\n"}
[0.522250] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.522273] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftHip_slider, self.velocityFrontalLeftHip_slider, self.positionValueFrontalLeftHip_label, self.velocityValueFrontalLeftHip_label, 'FrontalLeftHip', 'leftLeg'))\n"}
[0.522299] (py_motor_gui) StdoutLine: {'line': b'1:                                                                       ^\n'}
[0.522322] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftHip_slider, self.velocityFrontalLeftHip_slider, self.positionValueFrontalLeftHip_label, self.velocityValueFrontalLeftHip_label, 'FrontalLeftHip', 'leftLeg'))\n"}
[0.522346] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.522368] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftHip_slider, self.velocityFrontalLeftHip_slider, self.positionValueFrontalLeftHip_label, self.velocityValueFrontalLeftHip_label, 'FrontalLeftHip', 'leftLeg'))\n"}
[0.522391] (py_motor_gui) StdoutLine: {'line': b'1:                                                                       ^\n'}
[0.522414] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftHip_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftHip_slider, self.velocityFrontalLeftHip_slider, self.positionValueFrontalLeftHip_label, self.velocityValueFrontalLeftHip_label, 'FrontalLeftHip', 'leftLeg'))\n"}
[0.522438] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.522460] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftKnee_slider, self.velocityFrontalLeftKnee_slider, self.positionValueFrontalLeftKnee_label, self.velocityValueFrontalLeftKnee_label, 'FrontalLeftKnee', 'leftLeg'))\n"}
[0.522484] (py_motor_gui) StdoutLine: {'line': b'1:                                                                        ^\n'}
[0.522507] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftKnee_slider, self.velocityFrontalLeftKnee_slider, self.positionValueFrontalLeftKnee_label, self.velocityValueFrontalLeftKnee_label, 'FrontalLeftKnee', 'leftLeg'))\n"}
[0.522529] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.522555] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftKnee_slider, self.velocityFrontalLeftKnee_slider, self.positionValueFrontalLeftKnee_label, self.velocityValueFrontalLeftKnee_label, 'FrontalLeftKnee', 'leftLeg'))\n"}
[0.522578] (py_motor_gui) StdoutLine: {'line': b'1:                                                                        ^\n'}
[0.522600] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftKnee_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftKnee_slider, self.velocityFrontalLeftKnee_slider, self.positionValueFrontalLeftKnee_label, self.velocityValueFrontalLeftKnee_label, 'FrontalLeftKnee', 'leftLeg'))\n"}
[0.522624] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.522647] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftAnkle_slider, self.velocityFrontalLeftAnkle_slider, self.positionValueFrontalLeftAnkle_label, self.velocityValueFrontalLeftAnkle_label, 'FrontalLeftAnkle', 'leftLeg'))\n"}
[0.522669] (py_motor_gui) StdoutLine: {'line': b'1:                                                                         ^\n'}
[0.522691] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.522714] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:4:1: F403 'from PyQt5 import *' used; unable to detect undefined names\n"}
[0.522736] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.522759] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:4:11: E272 multiple spaces before keyword\n'}
[0.522782] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.522804] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:5:19: E272 multiple spaces before keyword\n'}
[0.522844] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.522878] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:6:1: F403 'from .motorGuiWindow import *' used; unable to detect undefined names\n"}
[0.522905] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.522931] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:8:1: E302 expected 2 blank lines, found 1\n'}
[0.522954] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.522979] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:8:18: F405 'QtWidgets' may be undefined, or defined from star imports: .motorGuiWindow, PyQt5\n"}
[0.523004] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523028] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:8:41: F405 'Ui_Dialog' may be undefined, or defined from star imports: .motorGuiWindow, PyQt5\n"}
[0.523053] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523077] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:11:9: F405 'QtWidgets' may be undefined, or defined from star imports: .motorGuiWindow, PyQt5\n"}
[0.523100] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523123] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:18:1: W293 blank line contains whitespace\n'}
[0.523149] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523173] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:21:66: E231 missing whitespace after ':'\n"}
[0.523195] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523217] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:21:100: E501 line too long (235 > 99 characters)\n'}
[0.523240] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523262] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:22:66: E231 missing whitespace after ':'\n"}
[0.523284] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523307] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:22:100: E501 line too long (235 > 99 characters)\n'}
[0.523331] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523352] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:23:68: E231 missing whitespace after ':'\n"}
[0.523375] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523397] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:23:100: E501 line too long (247 > 99 characters)\n'}
[0.523419] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523442] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:24:68: E231 missing whitespace after ':'\n"}
[0.523468] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523491] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:24:100: E501 line too long (247 > 99 characters)\n'}
[0.523516] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523538] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:26:77: E231 missing whitespace after ':'\n"}
[0.523561] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523584] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:26:100: E501 line too long (305 > 99 characters)\n'}
[0.523606] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523628] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:27:77: E231 missing whitespace after ':'\n"}
[0.523650] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523672] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:27:100: E501 line too long (305 > 99 characters)\n'}
[0.523694] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523717] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:28:78: E231 missing whitespace after ':'\n"}
[0.523740] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523762] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:28:100: E501 line too long (311 > 99 characters)\n'}
[0.523784] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523806] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:29:78: E231 missing whitespace after ':'\n"}
[0.523829] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523851] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:29:100: E501 line too long (311 > 99 characters)\n'}
[0.523874] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523896] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:30:75: E231 missing whitespace after ':'\n"}
[0.523918] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523940] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:30:100: E501 line too long (293 > 99 characters)\n'}
[0.523962] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.523984] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:31:75: E231 missing whitespace after ':'\n"}
[0.524006] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524028] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:31:100: E501 line too long (293 > 99 characters)\n'}
[0.524050] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524071] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:32:74: E231 missing whitespace after ':'\n"}
[0.524094] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524116] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:32:100: E501 line too long (287 > 99 characters)\n'}
[0.524138] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524161] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:33:74: E231 missing whitespace after ':'\n"}
[0.524186] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524208] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:33:100: E501 line too long (287 > 99 characters)\n'}
[0.524230] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524253] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:34:72: E231 missing whitespace after ':'\n"}
[0.524275] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524297] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:34:100: E501 line too long (275 > 99 characters)\n'}
[0.524320] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524342] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:35:72: E231 missing whitespace after ':'\n"}
[0.524366] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524389] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:35:100: E501 line too long (275 > 99 characters)\n'}
[0.524411] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524434] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:36:74: E231 missing whitespace after ':'\n"}
[0.524468] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524507] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:36:100: E501 line too long (287 > 99 characters)\n'}
[0.524548] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524588] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:37:74: E231 missing whitespace after ':'\n"}
[0.524630] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524670] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:37:100: E501 line too long (287 > 99 characters)\n'}
[0.524711] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524750] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:39:76: E231 missing whitespace after ':'\n"}
[0.524790] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524833] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:39:100: E501 line too long (298 > 99 characters)\n'}
[0.524875] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.524916] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:40:76: E231 missing whitespace after ':'\n"}
[0.524961] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525001] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:40:100: E501 line too long (298 > 99 characters)\n'}
[0.525041] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525080] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:41:77: E231 missing whitespace after ':'\n"}
[0.525123] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525161] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:41:100: E501 line too long (304 > 99 characters)\n'}
[0.525200] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525238] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:42:77: E231 missing whitespace after ':'\n"}
[0.525277] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525315] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:42:100: E501 line too long (304 > 99 characters)\n'}
[0.525353] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525391] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:43:74: E231 missing whitespace after ':'\n"}
[0.525429] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525469] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:43:100: E501 line too long (286 > 99 characters)\n'}
[0.525507] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525546] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:44:74: E231 missing whitespace after ':'\n"}
[0.525587] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525625] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:44:100: E501 line too long (286 > 99 characters)\n'}
[0.525691] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525733] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:45:73: E231 missing whitespace after ':'\n"}
[0.525775] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525821] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:45:100: E501 line too long (280 > 99 characters)\n'}
[0.525872] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525915] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:46:73: E231 missing whitespace after ':'\n"}
[0.525957] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.525999] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:46:100: E501 line too long (280 > 99 characters)\n'}
[0.526040] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.526081] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:47:71: E231 missing whitespace after ':'\n"}
[0.526121] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.526160] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:47:100: E501 line too long (268 > 99 characters)\n'}
[0.526198] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.526238] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:48:71: E231 missing whitespace after ':'\n"}
[0.526296] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.526365] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:48:100: E501 line too long (268 > 99 characters)\n'}
[0.526408] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.526450] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:49:73: E231 missing whitespace after ':'\n"}
[0.526491] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.526530] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:49:100: E501 line too long (280 > 99 characters)\n'}
[0.526571] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.526609] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:50:73: E231 missing whitespace after ':'\n"}
[0.526647] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.526688] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:50:100: E501 line too long (280 > 99 characters)\n'}
[0.526729] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.526769] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:51:1: W293 blank line contains whitespace\n'}
[0.526809] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.526848] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:52:67: E231 missing whitespace after ':'\n"}
[0.526887] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.526925] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:52:100: E501 line too long (242 > 99 characters)\n'}
[0.526963] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527002] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:53:67: E231 missing whitespace after ':'\n"}
[0.527040] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527078] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:53:100: E501 line too long (242 > 99 characters)\n'}
[0.527116] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527153] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:54:69: E231 missing whitespace after ':'\n"}
[0.527190] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527227] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:54:100: E501 line too long (254 > 99 characters)\n'}
[0.527265] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527301] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:55:69: E231 missing whitespace after ':'\n"}
[0.527338] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527375] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:55:100: E501 line too long (254 > 99 characters)\n'}
[0.527412] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527448] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:57:70: E231 missing whitespace after ':'\n"}
[0.527483] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527519] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:57:100: E501 line too long (263 > 99 characters)\n'}
[0.527554] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527591] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:58:70: E231 missing whitespace after ':'\n"}
[0.527627] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527665] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:58:100: E501 line too long (263 > 99 characters)\n'}
[0.527701] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527737] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:59:73: E231 missing whitespace after ':'\n"}
[0.527775] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527812] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:59:100: E501 line too long (280 > 99 characters)\n'}
[0.527848] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527885] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:59:248: E231 missing whitespace after ','\n"}
[0.527921] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.527958] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:60:73: E231 missing whitespace after ':'\n"}
[0.527995] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528030] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:60:100: E501 line too long (281 > 99 characters)\n'}
[0.528067] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528103] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:61:72: E231 missing whitespace after ':'\n"}
[0.528139] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528177] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:61:100: E501 line too long (275 > 99 characters)\n'}
[0.528214] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528251] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:62:72: E231 missing whitespace after ':'\n"}
[0.528292] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528333] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:62:100: E501 line too long (275 > 99 characters)\n'}
[0.528374] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528415] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:63:73: E231 missing whitespace after ':'\n"}
[0.528454] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528494] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:63:100: E501 line too long (281 > 99 characters)\n'}
[0.528534] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528573] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:64:73: E231 missing whitespace after ':'\n"}
[0.528613] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528653] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:64:100: E501 line too long (281 > 99 characters)\n'}
[0.528691] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528728] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:65:74: E231 missing whitespace after ':'\n"}
[0.528766] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528804] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:65:100: E501 line too long (287 > 99 characters)\n'}
[0.528917] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.528964] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:66:74: E231 missing whitespace after ':'\n"}
[0.529009] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.529050] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:66:100: E501 line too long (287 > 99 characters)\n'}
[0.529209] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.529348] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:67:75: E231 missing whitespace after ':'\n"}
[0.529709] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.529785] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:67:100: E501 line too long (293 > 99 characters)\n'}
[0.529839] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.529881] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:68:75: E231 missing whitespace after ':'\n"}
[0.529920] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530035] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:68:100: E501 line too long (293 > 99 characters)\n'}
[0.530093] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530134] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:70:69: E231 missing whitespace after ':'\n"}
[0.530176] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530215] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:70:100: E501 line too long (256 > 99 characters)\n'}
[0.530253] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530291] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:71:69: E231 missing whitespace after ':'\n"}
[0.530330] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530410] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:71:100: E501 line too long (256 > 99 characters)\n'}
[0.530466] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530507] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:72:72: E231 missing whitespace after ':'\n"}
[0.530547] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530585] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:72:100: E501 line too long (274 > 99 characters)\n'}
[0.530623] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530660] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:73:72: E231 missing whitespace after ':'\n"}
[0.530697] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530733] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:73:100: E501 line too long (274 > 99 characters)\n'}
[0.530769] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530804] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:74:71: E231 missing whitespace after ':'\n"}
[0.530840] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530875] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:74:100: E501 line too long (268 > 99 characters)\n'}
[0.530935] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.530978] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:75:71: E231 missing whitespace after ':'\n"}
[0.531019] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.531058] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:75:100: E501 line too long (268 > 99 characters)\n'}
[0.531100] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.531137] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:76:72: E231 missing whitespace after ':'\n"}
[0.531175] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.531213] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:76:100: E501 line too long (274 > 99 characters)\n'}
[0.531249] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.531286] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:77:72: E231 missing whitespace after ':'\n"}
[0.531323] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.531360] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:77:100: E501 line too long (274 > 99 characters)\n'}
[0.531396] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.531433] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:78:73: E231 missing whitespace after ':'\n"}
[0.531470] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.531506] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionFrontalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftAnkle_slider, self.velocityFrontalLeftAnkle_slider, self.positionValueFrontalLeftAnkle_label, self.velocityValueFrontalLeftAnkle_label, 'FrontalLeftAnkle', 'leftLeg'))\n"}
[0.531548] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.531586] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftAnkle_slider, self.velocityFrontalLeftAnkle_slider, self.positionValueFrontalLeftAnkle_label, self.velocityValueFrontalLeftAnkle_label, 'FrontalLeftAnkle', 'leftLeg'))\n"}
[0.531623] (py_motor_gui) StdoutLine: {'line': b'1:                                                                         ^\n'}
[0.531661] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocityFrontalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionFrontalLeftAnkle_slider, self.velocityFrontalLeftAnkle_slider, self.positionValueFrontalLeftAnkle_label, self.velocityValueFrontalLeftAnkle_label, 'FrontalLeftAnkle', 'leftLeg'))\n"}
[0.531702] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.531741] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftAnkle_slider, self.velocitySagittalLeftAnkle_slider, self.positionValueSagittalLeftAnkle_label, self.velocityValueSagittalLeftAnkle_label, 'SagittalLeftAnkle', 'leftLeg'))\n"}
[0.531783] (py_motor_gui) StdoutLine: {'line': b'1:                                                                          ^\n'}
[0.531820] (py_motor_gui) StdoutLine: {'line': b"1:         self.positionSagittalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftAnkle_slider, self.velocitySagittalLeftAnkle_slider, self.positionValueSagittalLeftAnkle_label, self.velocityValueSagittalLeftAnkle_label, 'SagittalLeftAnkle', 'leftLeg'))\n"}
[0.531858] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.531897] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftAnkle_slider, self.velocitySagittalLeftAnkle_slider, self.positionValueSagittalLeftAnkle_label, self.velocityValueSagittalLeftAnkle_label, 'SagittalLeftAnkle', 'leftLeg'))\n"}
[0.531934] (py_motor_gui) StdoutLine: {'line': b'1:                                                                          ^\n'}
[0.531974] (py_motor_gui) StdoutLine: {'line': b"1:         self.velocitySagittalLeftAnkle_slider.valueChanged.connect(lambda:self.dragSlider(self.positionSagittalLeftAnkle_slider, self.velocitySagittalLeftAnkle_slider, self.positionValueSagittalLeftAnkle_label, self.velocityValueSagittalLeftAnkle_label, 'SagittalLeftAnkle', 'leftLeg'))\n"}
[0.532012] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.532050] (py_motor_gui) StdoutLine: {'line': b'1:     def dragSlider(self, positionSlider, velocitySlider, positionValueLabel, velocityValueLabel, articulation, extremity):\n'}
[0.532094] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.532131] (py_motor_gui) StdoutLine: {'line': b'1:         \n'}
[0.532168] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.532206] (py_motor_gui) StdoutLine: {'line': b'1:         self.subscriber.publishPosition(articulation, str(positionSlider.value() - 90), str(velocitySlider.value()), extremity)\n'}
[0.532246] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.532284] (py_motor_gui) StdoutLine: {'line': b'1:     \n'}
[0.532321] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.532358] (py_motor_gui) StdoutLine: {'line': b'1:     app = QtWidgets.QApplication([])\n'}
[0.532398] (py_motor_gui) StdoutLine: {'line': b'1:           ^\n'}
[0.532439] (py_motor_gui) StdoutLine: {'line': b'1:     app.exec_()               ^\n'}
[0.532481] (py_motor_gui) StdoutLine: {'line': b'1: import itertools\n'}
[0.532522] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.532567] (py_motor_gui) StdoutLine: {'line': b'1: class WindowSubscriber(Node):\n'}
[0.532609] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.532745] (py_motor_gui) StdoutLine: {'line': b'1:         #for position, speed in zip(positions, speeds):\n'}
[0.532859] (py_motor_gui) StdoutLine: {'line': b'1:         ^\n'}
[0.532976] (py_motor_gui) StdoutLine: {'line': b'1: def main(args=None):\n'}
[0.533025] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.533074] (py_motor_gui) StdoutLine: {'line': b"1: if(__name__ == '__main__'):\n"}
[0.533336] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.533406] (py_motor_gui) StdoutLine: {'line': b'1:     main()          ^\n'}
[0.533527] (py_motor_gui) StdoutLine: {'line': b'1: from PyQt5 import QtCore, QtGui, QtWidgets\n'}
[0.533597] (py_motor_gui) StdoutLine: {'line': b'1: ^\n'}
[0.533648] (py_motor_gui) StdoutLine: {'line': b'1:         self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)\n'}
[0.533695] (py_motor_gui) StdoutLine: {'line': b'1:                                                                            ^\n'}
[0.533739] (py_motor_gui) StdoutLine: {'line': b'1:         self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)\n'}
[0.533783] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.533825] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)\n'}
[0.533868] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.533910] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionFrontalRightShoulder_slider = QtWidgets.QSlider(self.frontalRightShoulder_groupBox)\n'}
[0.533953] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.533995] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionFrontalRightShoulder_slider.setObjectName("positionFrontalRightShoulder_slider")\n'}
[0.534037] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.534079] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityFrontalRightShoulder_slider = QtWidgets.QSlider(self.frontalRightShoulder_groupBox)\n'}
[0.534121] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.534166] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityFrontalRightShoulder_slider.setObjectName("velocityFrontalRightShoulder_slider")\n'}
[0.534209] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.534252] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)\n'}
[0.534294] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.534338] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)\n'}
[0.534380] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.534422] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalRightShoulder_label.setObjectName("velocityValueFrontalRightShoulder_label")\n'}
[0.534466] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.534510] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)\n'}
[0.534558] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.534605] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalRightShoulder_label.setObjectName("positionValueFrontalRightShoulder_label")\n'}
[0.534657] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.534704] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)\n'}
[0.534747] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.534789] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderFrontalRightShoulder_label = QtWidgets.QLabel(self.frontalRightShoulder_groupBox)\n'}
[0.534831] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.534875] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderFrontalRightShoulder_lineEdit = QtWidgets.QLineEdit(self.frontalRightShoulder_groupBox)\n'}
[0.534917] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.534969] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderFrontalRightShoulder_lineEdit.setObjectName("encoderFrontalRightShoulder_lineEdit")\n'}
[0.535015] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.535065] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueFrontalRightShoulder_lineEdit = QtWidgets.QLineEdit(self.frontalRightShoulder_groupBox)\n'}
[0.535110] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.535154] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueFrontalRightShoulder_lineEdit.setObjectName("torqueFrontalRightShoulder_lineEdit")\n'}
[0.535198] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.535239] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocitySagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)\n'}
[0.535281] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.535321] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocitySagittalRightShoulder_label.setObjectName("velocitySagittalRightShoulder_label")\n'}
[0.535363] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.535404] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionSagittalRightShoulder_slider = QtWidgets.QSlider(self.sagittalRightShoulder_groupBox)\n'}
[0.535445] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.535542] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionSagittalRightShoulder_slider.setObjectName("positionSagittalRightShoulder_slider")\n'}
[0.535608] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.535655] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocitySagittalRightShoulder_slider = QtWidgets.QSlider(self.sagittalRightShoulder_groupBox)\n'}
[0.535699] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.535743] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocitySagittalRightShoulder_slider.setObjectName("velocitySagittalRightShoulder_slider")\n'}
[0.535787] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.535887] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionSagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)\n'}
[0.535967] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.536022] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionSagittalRightShoulder_label.setObjectName("positionSagittalRightShoulder_label")\n'}
[0.536069] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.536114] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueSagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)\n'}
[0.536160] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.536205] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueSagittalRightShoulder_label.setObjectName("velocityValueSagittalRightShoulder_label")\n'}
[0.536248] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.536291] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueSagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)\n'}
[0.536333] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.536380] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueSagittalRightShoulder_label.setObjectName("positionValueSagittalRightShoulder_label")\n'}
[0.536423] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.536464] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueSagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)\n'}
[0.536504] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.536545] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderSagittalRightShoulder_label = QtWidgets.QLabel(self.sagittalRightShoulder_groupBox)\n'}
[0.536587] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.536628] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderSagittalRightShoulder_lineEdit = QtWidgets.QLineEdit(self.sagittalRightShoulder_groupBox)\n'}
[0.536669] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.536709] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderSagittalRightShoulder_lineEdit.setObjectName("encoderSagittalRightShoulder_lineEdit")\n'}
[0.536825] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.536913] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueSagittalRightShoulder_lineEdit = QtWidgets.QLineEdit(self.sagittalRightShoulder_groupBox)\n'}
[0.536965] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.537013] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueSagittalRightShoulder_lineEdit.setObjectName("torqueSagittalRightShoulder_lineEdit")\n'}
[0.537132] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.537392] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionAxialRightShoulder_slider = QtWidgets.QSlider(self.axialRightShoulder_groupBox)\n'}
[0.537478] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.537611] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityAxialRightShoulder_slider = QtWidgets.QSlider(self.axialRightShoulder_groupBox)\n'}
[0.537767] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.538063] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueAxialRightShoulder_label = QtWidgets.QLabel(self.axialRightShoulder_groupBox)\n'}
[0.538139] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.538193] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueAxialRightShoulder_label.setObjectName("positionValueAxialRightShoulder_label")\n'}
[0.538243] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.538292] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueAxialRightShoulder_label = QtWidgets.QLabel(self.axialRightShoulder_groupBox)\n'}
[0.538338] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.538384] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueAxialRightShoulder_label.setObjectName("velocityValueAxialRightShoulder_label")\n'}
[0.538431] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.538477] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderAxialRightShoulder_lineEdit = QtWidgets.QLineEdit(self.axialRightShoulder_groupBox)\n'}
[0.538604] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.538832] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueAxialRightShoulder_lineEdit = QtWidgets.QLineEdit(self.axialRightShoulder_groupBox)\n'}
[0.538890] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.538943] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalRightElbow_label = QtWidgets.QLabel(self.frontalRightElbow_groupBox)\n'}
[0.538993] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.539040] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalRightElbow_label.setObjectName("velocityValueFrontalRightElbow_label")\n'}
[0.539176] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.539241] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalRightElbow_label = QtWidgets.QLabel(self.frontalRightElbow_groupBox)\n'}
[0.539290] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.539481] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalRightElbow_label.setObjectName("positionValueFrontalRightElbow_label")\n'}
[0.539540] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.539674] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderFrontalRightElbow_lineEdit = QtWidgets.QLineEdit(self.frontalRightElbow_groupBox)\n'}
[0.539730] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.539779] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueFrontalRightElbow_lineEdit = QtWidgets.QLineEdit(self.frontalRightElbow_groupBox)\n'}
[0.539827] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.539874] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalRightWrist_label = QtWidgets.QLabel(self.frontalRightWrist_groupBox)\n'}
[0.539922] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.539973] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalRightWrist_label.setObjectName("velocityValueFrontalRightWrist_label")\n'}
[0.540022] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.540067] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalRightWrist_label = QtWidgets.QLabel(self.frontalRightWrist_groupBox)\n'}
[0.540115] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.540162] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalRightWrist_label.setObjectName("positionValueFrontalRightWrist_label")\n'}
[0.540209] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.540335] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderFrontalRightWrist_lineEdit = QtWidgets.QLineEdit(self.frontalRightWrist_groupBox)\n'}
[0.540392] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.540447] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueFrontalRightWrist_lineEdit = QtWidgets.QLineEdit(self.frontalRightWrist_groupBox)\n'}
[0.540495] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.540545] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionSagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)\n'}
[0.540591] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.540638] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocitySagittalLeftShoulder_slider = QtWidgets.QSlider(self.sagittalLeftShoulder_groupBox)\n'}
[0.540684] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.540729] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocitySagittalLeftShoulder_slider.setObjectName("velocitySagittalLeftShoulder_slider")\n'}
[0.540775] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.540822] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocitySagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)\n'}
[0.540867] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.540912] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionSagittalLeftShoulder_slider = QtWidgets.QSlider(self.sagittalLeftShoulder_groupBox)\n'}
[0.540957] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.541002] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionSagittalLeftShoulder_slider.setObjectName("positionSagittalLeftShoulder_slider")\n'}
[0.541047] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.541092] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueSagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)\n'}
[0.541136] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.541180] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueSagittalLeftShoulder_label.setObjectName("velocityValueSagittalLeftShoulder_label")\n'}
[0.541225] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.541274] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueSagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)\n'}
[0.541319] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.541365] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueSagittalLeftShoulder_label.setObjectName("positionValueSagittalLeftShoulder_label")\n'}
[0.541410] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.541454] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderSagittalLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.sagittalLeftShoulder_groupBox)\n'}
[0.541499] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.541543] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderSagittalLeftShoulder_lineEdit.setObjectName("encoderSagittalLeftShoulder_lineEdit")\n'}
[0.541587] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.541631] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueSagittalLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.sagittalLeftShoulder_groupBox)\n'}
[0.541681] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.541740] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueSagittalLeftShoulder_lineEdit.setObjectName("torqueSagittalLeftShoulder_lineEdit")\n'}
[0.541808] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.541868] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderSagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)\n'}
[0.541927] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.541990] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueSagittalLeftShoulder_label = QtWidgets.QLabel(self.sagittalLeftShoulder_groupBox)\n'}
[0.542056] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.542123] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalLeftWrist_label.setObjectName("positionValueFrontalLeftWrist_label")\n'}
[0.542313] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.542375] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalLeftWrist_label.setObjectName("velocityValueFrontalLeftWrist_label")\n'}
[0.542431] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.542492] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueAxialLeftShoulder_label = QtWidgets.QLabel(self.axialLeftShoulder_groupBox)\n'}
[0.542551] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.542602] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueAxialLeftShoulder_label.setObjectName("velocityValueAxialLeftShoulder_label")\n'}
[0.542651] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.542699] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueAxialLeftShoulder_label = QtWidgets.QLabel(self.axialLeftShoulder_groupBox)\n'}
[0.542748] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.542795] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueAxialLeftShoulder_label.setObjectName("positionValueAxialLeftShoulder_label")\n'}
[0.542844] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.542889] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderAxialLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.axialLeftShoulder_groupBox)\n'}
[0.542936] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.542981] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueAxialLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.axialLeftShoulder_groupBox)\n'}
[0.543026] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.543071] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionFrontalLeftShoulder_slider = QtWidgets.QSlider(self.frontalLeftShoulder_groupBox)\n'}
[0.543116] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.543161] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionFrontalLeftShoulder_label = QtWidgets.QLabel(self.frontalLeftShoulder_groupBox)\n'}
[0.543206] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.543251] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityFrontalLeftShoulder_slider = QtWidgets.QSlider(self.frontalLeftShoulder_groupBox)\n'}
[0.543296] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.543343] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityFrontalLeftShoulder_label = QtWidgets.QLabel(self.frontalLeftShoulder_groupBox)\n'}
[0.543386] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.543431] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalLeftShoulder_label = QtWidgets.QLabel(self.frontalLeftShoulder_groupBox)\n'}
[0.543476] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.543592] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalLeftShoulder_label.setObjectName("velocityValueFrontalLeftShoulder_label")\n'}
[0.543652] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.543704] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalLeftShoulder_label = QtWidgets.QLabel(self.frontalLeftShoulder_groupBox)\n'}
[0.543755] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.543802] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalLeftShoulder_label.setObjectName("positionValueFrontalLeftShoulder_label")\n'}
[0.543849] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.543896] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderFrontalLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.frontalLeftShoulder_groupBox)\n'}
[0.543943] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.543989] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:78:100: E501 line too long (280 > 99 characters)\n'}
[0.544040] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.544085] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:79:73: E231 missing whitespace after ':'\n"}
[0.544132] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.544177] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:79:100: E501 line too long (280 > 99 characters)\n'}
[0.544290] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.544360] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:80:74: E231 missing whitespace after ':'\n"}
[0.544413] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.544460] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:80:100: E501 line too long (286 > 99 characters)\n'}
[0.544506] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.544754] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:81:74: E231 missing whitespace after ':'\n"}
[0.544843] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.544896] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:81:100: E501 line too long (286 > 99 characters)\n'}
[0.544947] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.544995] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:85:100: E501 line too long (122 > 99 characters)\n'}
[0.545041] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.545086] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:86:1: W293 blank line contains whitespace\n'}
[0.545132] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.545181] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:90:100: E501 line too long (127 > 99 characters)\n'}
[0.545229] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.545278] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:92:1: W293 blank line contains whitespace\n'}
[0.545325] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.545370] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiLogic.py:95:11: F405 'QtWidgets' may be undefined, or defined from star imports: .motorGuiWindow, PyQt5\n"}
[0.545428] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.545473] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiLogic.py:98:16: W292 no newline at end of file\n'}
[0.545592] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.545712] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiNode.py:4:1: F401 'itertools' imported but unused\n"}
[0.545769] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.545896] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiNode.py:9:1: E302 expected 2 blank lines, found 1\n'}
[0.545956] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546009] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiNode.py:48:9: E265 block comment should start with '# '\n"}
[0.546059] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546107] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiNode.py:66:1: E302 expected 2 blank lines, found 1\n'}
[0.546154] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546201] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiNode.py:75:1: E305 expected 2 blank lines after class or function definition, found 1\n'}
[0.546249] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546295] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiNode.py:76:11: W292 no newline at end of file\n'}
[0.546342] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546388] (py_motor_gui) StdoutLine: {'line': b"1: ./src/motorGuiWindow.py:11:1: F401 'PyQt5.QtGui' imported but unused\n"}
[0.546435] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546481] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:21:76: E227 missing whitespace around bitwise or shift operator\n'}
[0.546511] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546534] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:21:100: E501 line too long (106 > 99 characters)\n'}
[0.546557] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546580] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:114:100: E501 line too long (102 > 99 characters)\n'}
[0.546603] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546630] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:117:100: E501 line too long (104 > 99 characters)\n'}
[0.546653] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546674] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:122:100: E501 line too long (101 > 99 characters)\n'}
[0.546696] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546718] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:123:100: E501 line too long (104 > 99 characters)\n'}
[0.546741] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546763] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:127:100: E501 line too long (101 > 99 characters)\n'}
[0.546787] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546809] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:128:100: E501 line too long (102 > 99 characters)\n'}
[0.546831] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546853] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:131:100: E501 line too long (107 > 99 characters)\n'}
[0.546874] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546896] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:133:100: E501 line too long (109 > 99 characters)\n'}
[0.546918] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546939] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:134:100: E501 line too long (107 > 99 characters)\n'}
[0.546961] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.546982] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:136:100: E501 line too long (109 > 99 characters)\n'}
[0.547005] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547027] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:137:100: E501 line too long (100 > 99 characters)\n'}
[0.547048] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547070] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:140:100: E501 line too long (101 > 99 characters)\n'}
[0.547091] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547113] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:143:100: E501 line too long (107 > 99 characters)\n'}
[0.547135] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547156] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:145:100: E501 line too long (103 > 99 characters)\n'}
[0.547177] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547199] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:146:100: E501 line too long (106 > 99 characters)\n'}
[0.547221] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547242] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:148:100: E501 line too long (101 > 99 characters)\n'}
[0.547265] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547287] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:152:100: E501 line too long (104 > 99 characters)\n'}
[0.547309] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547332] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:154:100: E501 line too long (101 > 99 characters)\n'}
[0.547354] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547376] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:155:100: E501 line too long (106 > 99 characters)\n'}
[0.547398] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547420] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:160:100: E501 line too long (103 > 99 characters)\n'}
[0.547442] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547464] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:161:100: E501 line too long (106 > 99 characters)\n'}
[0.547486] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547508] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:165:100: E501 line too long (103 > 99 characters)\n'}
[0.547529] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547552] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:166:100: E501 line too long (104 > 99 characters)\n'}
[0.547577] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547599] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:168:100: E501 line too long (101 > 99 characters)\n'}
[0.547620] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547642] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:169:100: E501 line too long (109 > 99 characters)\n'}
[0.547663] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547685] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:171:100: E501 line too long (111 > 99 characters)\n'}
[0.547707] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547729] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:172:100: E501 line too long (109 > 99 characters)\n'}
[0.547750] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547772] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:174:100: E501 line too long (111 > 99 characters)\n'}
[0.547794] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547816] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:175:100: E501 line too long (102 > 99 characters)\n'}
[0.547838] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547859] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:178:100: E501 line too long (103 > 99 characters)\n'}
[0.547881] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547902] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:181:100: E501 line too long (109 > 99 characters)\n'}
[0.547924] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547946] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:183:100: E501 line too long (105 > 99 characters)\n'}
[0.547969] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.547990] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:184:100: E501 line too long (108 > 99 characters)\n'}
[0.548012] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548033] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:186:100: E501 line too long (103 > 99 characters)\n'}
[0.548055] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548077] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:193:100: E501 line too long (100 > 99 characters)\n'}
[0.548099] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548120] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:202:100: E501 line too long (100 > 99 characters)\n'}
[0.548142] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548163] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:207:100: E501 line too long (103 > 99 characters)\n'}
[0.548184] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548205] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:209:100: E501 line too long (105 > 99 characters)\n'}
[0.548227] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548248] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:210:100: E501 line too long (103 > 99 characters)\n'}
[0.548270] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548293] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:212:100: E501 line too long (105 > 99 characters)\n'}
[0.548315] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548338] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:219:100: E501 line too long (103 > 99 characters)\n'}
[0.548364] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548388] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:222:100: E501 line too long (102 > 99 characters)\n'}
[0.548411] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548433] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:245:100: E501 line too long (101 > 99 characters)\n'}
[0.548456] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548478] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:247:100: E501 line too long (103 > 99 characters)\n'}
[0.548500] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548522] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:248:100: E501 line too long (101 > 99 characters)\n'}
[0.548546] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548568] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:250:100: E501 line too long (103 > 99 characters)\n'}
[0.548590] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548611] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:257:100: E501 line too long (101 > 99 characters)\n'}
[0.548635] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548657] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:260:100: E501 line too long (100 > 99 characters)\n'}
[0.548679] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548702] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:321:100: E501 line too long (101 > 99 characters)\n'}
[0.548724] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548746] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:323:100: E501 line too long (103 > 99 characters)\n'}
[0.548767] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548788] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:324:100: E501 line too long (101 > 99 characters)\n'}
[0.548810] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548831] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:326:100: E501 line too long (103 > 99 characters)\n'}
[0.548852] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548873] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:333:100: E501 line too long (101 > 99 characters)\n'}
[0.548895] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548917] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:336:100: E501 line too long (100 > 99 characters)\n'}
[0.548939] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.548961] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:345:100: E501 line too long (102 > 99 characters)\n'}
[0.548982] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549004] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:348:100: E501 line too long (104 > 99 characters)\n'}
[0.549025] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549047] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:352:100: E501 line too long (101 > 99 characters)\n'}
[0.549069] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549091] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:353:100: E501 line too long (102 > 99 characters)\n'}
[0.549113] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549135] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:356:100: E501 line too long (104 > 99 characters)\n'}
[0.549157] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549178] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:361:100: E501 line too long (101 > 99 characters)\n'}
[0.549201] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549221] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:362:100: E501 line too long (107 > 99 characters)\n'}
[0.549243] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549264] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:364:100: E501 line too long (109 > 99 characters)\n'}
[0.549285] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549306] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:365:100: E501 line too long (107 > 99 characters)\n'}
[0.549327] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549349] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:367:100: E501 line too long (109 > 99 characters)\n'}
[0.549370] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549391] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:368:100: E501 line too long (107 > 99 characters)\n'}
[0.549412] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549433] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:370:100: E501 line too long (103 > 99 characters)\n'}
[0.549454] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549653] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:371:100: E501 line too long (106 > 99 characters)\n'}
[0.549685] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549710] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:373:100: E501 line too long (101 > 99 characters)\n'}
[0.549734] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549757] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:374:100: E501 line too long (101 > 99 characters)\n'}
[0.549781] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549804] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:377:100: E501 line too long (100 > 99 characters)\n'}
[0.549829] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549852] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:402:100: E501 line too long (101 > 99 characters)\n'}
[0.549875] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549899] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:405:100: E501 line too long (101 > 99 characters)\n'}
[0.549922] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549945] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:438:100: E501 line too long (101 > 99 characters)\n'}
[0.549967] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.549991] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:440:100: E501 line too long (103 > 99 characters)\n'}
[0.550012] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550034] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:441:100: E501 line too long (101 > 99 characters)\n'}
[0.550056] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550104] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:443:100: E501 line too long (103 > 99 characters)\n'}
[0.550136] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550160] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:444:100: E501 line too long (101 > 99 characters)\n'}
[0.550183] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550207] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:447:100: E501 line too long (100 > 99 characters)\n'}
[0.550230] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550253] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:459:100: E501 line too long (102 > 99 characters)\n'}
[0.550275] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550298] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:465:100: E501 line too long (100 > 99 characters)\n'}
[0.550320] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550342] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:468:100: E501 line too long (102 > 99 characters)\n'}
[0.550365] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550387] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:473:100: E501 line too long (100 > 99 characters)\n'}
[0.550409] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550431] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:476:100: E501 line too long (105 > 99 characters)\n'}
[0.550453] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550474] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:478:100: E501 line too long (107 > 99 characters)\n'}
[0.550496] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550518] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:479:100: E501 line too long (105 > 99 characters)\n'}
[0.550539] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550561] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:481:100: E501 line too long (107 > 99 characters)\n'}
[0.550582] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550604] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:482:100: E501 line too long (105 > 99 characters)\n'}
[0.550625] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.550646] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderFrontalLeftShoulder_lineEdit.setObjectName("encoderFrontalLeftShoulder_lineEdit")\n'}
[0.550670] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.550692] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueFrontalLeftShoulder_lineEdit = QtWidgets.QLineEdit(self.frontalLeftShoulder_groupBox)\n'}
[0.550752] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.550779] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalLeftElbow_label.setObjectName("positionValueFrontalLeftElbow_label")\n'}
[0.550804] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.550832] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalLeftElbow_label.setObjectName("velocityValueFrontalLeftElbow_label")\n'}
[0.550856] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.550880] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalRightAnkle_label = QtWidgets.QLabel(self.frontalRightAnkle_groupBox)\n'}
[0.550904] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.550927] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalRightAnkle_label.setObjectName("velocityValueFrontalRightAnkle_label")\n'}
[0.550950] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.550973] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalRightAnkle_label = QtWidgets.QLabel(self.frontalRightAnkle_groupBox)\n'}
[0.550995] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551017] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalRightAnkle_label.setObjectName("positionValueFrontalRightAnkle_label")\n'}
[0.551040] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551062] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderFrontalRightAnkle_lineEdit = QtWidgets.QLineEdit(self.frontalRightAnkle_groupBox)\n'}
[0.551084] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551106] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueFrontalRightAnkle_lineEdit = QtWidgets.QLineEdit(self.frontalRightAnkle_groupBox)\n'}
[0.551130] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551152] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocitySagittalRightAnkle_slider = QtWidgets.QSlider(self.sagittalRightAnkle_groupBox)\n'}
[0.551174] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551196] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionSagittalRightAnkle_slider = QtWidgets.QSlider(self.sagittalRightAnkle_groupBox)\n'}
[0.551218] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551240] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueSagittalRightAnkle_label = QtWidgets.QLabel(self.sagittalRightAnkle_groupBox)\n'}
[0.551263] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551285] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueSagittalRightAnkle_label.setObjectName("positionValueSagittalRightAnkle_label")\n'}
[0.551307] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551331] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueSagittalRightAnkle_label = QtWidgets.QLabel(self.sagittalRightAnkle_groupBox)\n'}
[0.551353] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551375] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueSagittalRightAnkle_label.setObjectName("velocityValueSagittalRightAnkle_label")\n'}
[0.551398] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551420] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderSagittalRightAnkle_lineEdit = QtWidgets.QLineEdit(self.sagittalRightAnkle_groupBox)\n'}
[0.551442] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551465] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueSagittalRightAnkle_lineEdit = QtWidgets.QLineEdit(self.sagittalRightAnkle_groupBox)\n'}
[0.551487] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551509] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueSagittalRightHip_label.setObjectName("positionValueSagittalRightHip_label")\n'}
[0.551532] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551554] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueSagittalRightHip_label.setObjectName("velocityValueSagittalRightHip_label")\n'}
[0.551576] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551599] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalRightKnee_label.setObjectName("positionValueFrontalRightKnee_label")\n'}
[0.551621] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551644] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalRightKnee_label.setObjectName("velocityValueFrontalRightKnee_label")\n'}
[0.551669] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551691] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueFrontalLeftAnkle_label.setObjectName("positionValueFrontalLeftAnkle_label")\n'}
[0.551715] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551738] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueFrontalLeftAnkle_label.setObjectName("velocityValueFrontalLeftAnkle_label")\n'}
[0.551761] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551783] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueSagittalLeftAnkle_label = QtWidgets.QLabel(self.sagittalLeftAnkle_groupBox)\n'}
[0.551806] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551828] (py_motor_gui) StdoutLine: {'line': b'1:         self.velocityValueSagittalLeftAnkle_label.setObjectName("velocityValueSagittalLeftAnkle_label")\n'}
[0.551852] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551873] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueSagittalLeftAnkle_label = QtWidgets.QLabel(self.sagittalLeftAnkle_groupBox)\n'}
[0.551895] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551917] (py_motor_gui) StdoutLine: {'line': b'1:         self.positionValueSagittalLeftAnkle_label.setObjectName("positionValueSagittalLeftAnkle_label")\n'}
[0.551940] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.551961] (py_motor_gui) StdoutLine: {'line': b'1:         self.encoderSagittalLeftAnkle_lineEdit = QtWidgets.QLineEdit(self.sagittalLeftAnkle_groupBox)\n'}
[0.551982] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.552004] (py_motor_gui) StdoutLine: {'line': b'1:         self.torqueSagittalLeftAnkle_lineEdit = QtWidgets.QLineEdit(self.sagittalLeftAnkle_groupBox)\n'}
[0.552026] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.552048] (py_motor_gui) StdoutLine: {'line': b'1:         self.buttonBox.accepted.connect(Dialog.accept) # type: ignore\n'}
[0.552070] (py_motor_gui) StdoutLine: {'line': b'1:                                                       ^\n'}
[0.552092] (py_motor_gui) StdoutLine: {'line': b'1:         self.buttonBox.rejected.connect(Dialog.reject) # type: ignore\n'}
[0.552115] (py_motor_gui) StdoutLine: {'line': b'1:                                                       ^\n'}
[0.552137] (py_motor_gui) StdoutLine: {'line': b'1:         self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.head_tab), _translate("Dialog", "/head"))\n'}
[0.552159] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.552181] (py_motor_gui) StdoutLine: {'line': b'1:         self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.rightArm_tab), _translate("Dialog", "/rightArm"))\n'}
[0.552226] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.552255] (py_motor_gui) StdoutLine: {'line': b'1:         self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.leftArm_tab), _translate("Dialog", "/leftArm"))\n'}
[0.552280] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.552304] (py_motor_gui) StdoutLine: {'line': b'1:         self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.trunk_tab), _translate("Dialog", "/trunk"))\n'}
[0.552327] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.552349] (py_motor_gui) StdoutLine: {'line': b'1:         self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.rightLeg_tab), _translate("Dialog", "/rightLeg"))\n'}
[0.552373] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.552396] (py_motor_gui) StdoutLine: {'line': b'1:         self.fullController_tab.setTabText(self.fullController_tab.indexOf(self.leftLeg_tab), _translate("Dialog", "/leftLeg"))\n'}
[0.552418] (py_motor_gui) StdoutLine: {'line': b'1:                                                                                                    ^\n'}
[0.552439] (py_motor_gui) StdoutLine: {'line': b'1: 1     E227 missing whitespace around bitwise or shift operator\n'}
[0.552462] (py_motor_gui) StdoutLine: {'line': b"1: 57    E231 missing whitespace after ':'\n"}
[0.552484] (py_motor_gui) StdoutLine: {'line': b'1: 2     E261 at least two spaces before inline comment\n'}
[0.552507] (py_motor_gui) StdoutLine: {'line': b"1: 1     E265 block comment should start with '# '\n"}
[0.552530] (py_motor_gui) StdoutLine: {'line': b'1: 2     E272 multiple spaces before keyword\n'}
[0.552552] (py_motor_gui) StdoutLine: {'line': b'1: 3     E302 expected 2 blank lines, found 1\n'}
[0.552576] (py_motor_gui) StdoutLine: {'line': b'1: 1     E305 expected 2 blank lines after class or function definition, found 1\n'}
[0.552598] (py_motor_gui) StdoutLine: {'line': b'1: 182   E501 line too long (235 > 99 characters)\n'}
[0.552620] (py_motor_gui) StdoutLine: {'line': b"1: 2     F401 'itertools' imported but unused\n"}
[0.552642] (py_motor_gui) StdoutLine: {'line': b"1: 2     F403 'from PyQt5 import *' used; unable to detect undefined names\n"}
[0.552755] (py_motor_gui) StdoutLine: {'line': b"1: 4     F405 'QtWidgets' may be undefined, or defined from star imports: .motorGuiWindow, PyQt5\n"}
[0.552795] (py_motor_gui) StdoutLine: {'line': b'1: 2     W292 no newline at end of file\n'}
[0.552820] (py_motor_gui) StdoutLine: {'line': b'1: 4     W293 blank line contains whitespace\n'}
[0.552847] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:484:100: E501 line too long (101 > 99 characters)\n'}
[0.552872] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.552969] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:485:100: E501 line too long (104 > 99 characters)\n'}
[0.553013] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553127] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:516:100: E501 line too long (101 > 99 characters)\n'}
[0.553187] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553218] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:519:100: E501 line too long (101 > 99 characters)\n'}
[0.553244] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553269] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:672:100: E501 line too long (101 > 99 characters)\n'}
[0.553295] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553320] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:674:100: E501 line too long (103 > 99 characters)\n'}
[0.553346] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553372] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:675:100: E501 line too long (101 > 99 characters)\n'}
[0.553403] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553438] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:677:100: E501 line too long (103 > 99 characters)\n'}
[0.553463] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553486] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:678:100: E501 line too long (101 > 99 characters)\n'}
[0.553509] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553535] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:681:100: E501 line too long (100 > 99 characters)\n'}
[0.553559] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553581] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:693:100: E501 line too long (100 > 99 characters)\n'}
[0.553606] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553633] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:704:100: E501 line too long (100 > 99 characters)\n'}
[0.553660] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553684] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:710:100: E501 line too long (103 > 99 characters)\n'}
[0.553708] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553735] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:712:100: E501 line too long (105 > 99 characters)\n'}
[0.553761] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553785] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:713:100: E501 line too long (103 > 99 characters)\n'}
[0.553810] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553840] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:715:100: E501 line too long (105 > 99 characters)\n'}
[0.553866] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553889] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:716:100: E501 line too long (103 > 99 characters)\n'}
[0.553913] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553938] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:719:100: E501 line too long (102 > 99 characters)\n'}
[0.553974] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.553998] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:750:100: E501 line too long (101 > 99 characters)\n'}
[0.554020] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554043] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:753:100: E501 line too long (101 > 99 characters)\n'}
[0.554064] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554087] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:826:100: E501 line too long (101 > 99 characters)\n'}
[0.554109] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554131] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:829:100: E501 line too long (101 > 99 characters)\n'}
[0.554154] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554175] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:905:100: E501 line too long (101 > 99 characters)\n'}
[0.554198] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554220] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:908:100: E501 line too long (101 > 99 characters)\n'}
[0.554251] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554272] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1055:100: E501 line too long (101 > 99 characters)\n'}
[0.554293] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554315] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1057:100: E501 line too long (103 > 99 characters)\n'}
[0.554336] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554356] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1058:100: E501 line too long (101 > 99 characters)\n'}
[0.554376] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554395] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1060:100: E501 line too long (103 > 99 characters)\n'}
[0.554417] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554438] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1061:100: E501 line too long (101 > 99 characters)\n'}
[0.554461] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554481] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1064:100: E501 line too long (100 > 99 characters)\n'}
[0.554502] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554523] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1115:55: E261 at least two spaces before inline comment\n'}
[0.554543] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554563] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1116:55: E261 at least two spaces before inline comment\n'}
[0.554582] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554602] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1140:100: E501 line too long (121 > 99 characters)\n'}
[0.554623] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554643] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1195:100: E501 line too long (129 > 99 characters)\n'}
[0.554664] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554684] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1250:100: E501 line too long (127 > 99 characters)\n'}
[0.554705] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554725] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1269:100: E501 line too long (123 > 99 characters)\n'}
[0.554745] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554767] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1324:100: E501 line too long (129 > 99 characters)\n'}
[0.554787] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554807] (py_motor_gui) StdoutLine: {'line': b'1: ./src/motorGuiWindow.py:1379:100: E501 line too long (127 > 99 characters)\n'}
[0.554828] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.554848] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.555335] (py_motor_gui) StdoutLine: {'line': b'1: 4 files checked\n'}
[0.555456] (py_motor_gui) StdoutLine: {'line': b'1: 263 errors\n'}
[0.555494] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.555583] (py_motor_gui) StdoutLine: {'line': b"1: 'E'-type errors: 249\n"}
[0.555741] (py_motor_gui) StdoutLine: {'line': b"1: 'F'-type errors: 8\n"}
[0.555891] (py_motor_gui) StdoutLine: {'line': b"1: 'W'-type errors: 6\n"}
[0.555936] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.555966] (py_motor_gui) StdoutLine: {'line': b'1: Checked files:\n'}
[0.555992] (py_motor_gui) StdoutLine: {'line': b'1: \n'}
[0.556018] (py_motor_gui) StdoutLine: {'line': b'1: * ./setup.py\n'}
[0.556042] (py_motor_gui) StdoutLine: {'line': b'1: * ./src/motorGuiLogic.py\n'}
[0.556066] (py_motor_gui) StdoutLine: {'line': b'1: * ./src/motorGuiNode.py\n'}
[0.556089] (py_motor_gui) StdoutLine: {'line': b'1: * ./src/motorGuiWindow.py\n'}
[0.556113] (py_motor_gui) StdoutLine: {'line': b'1: -- run_test.py: return code 1\n'}
[0.556136] (py_motor_gui) StdoutLine: {'line': b"1: -- run_test.py: verify result file '/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/flake8.xunit.xml'\n"}
[0.556162] (py_motor_gui) StdoutLine: {'line': b'1/4 Test #1: flake8 ...........................***Failed    0.47 sec\n'}
[0.556185] (py_motor_gui) StdoutLine: {'line': b'test 2\n'}
[0.556209] (py_motor_gui) StdoutLine: {'line': b'    Start 2: lint_cmake\n'}
[0.556232] (py_motor_gui) StdoutLine: {'line': b'\n'}
[0.556255] (py_motor_gui) StdoutLine: {'line': b'2: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/lint_cmake.xunit.xml" "--package-name" "py_motor_gui" "--output-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/ament_lint_cmake/lint_cmake.txt" "--command" "/opt/ros/humble/bin/ament_lint_cmake" "--xunit-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/lint_cmake.xunit.xml"\n'}
[0.556290] (py_motor_gui) StdoutLine: {'line': b'2: Test timeout computed to be: 60\n'}
[0.587655] (py_motor_gui) StdoutLine: {'line': b"2: -- run_test.py: invoking following command in '/home/teo/ros2_motor_gui_ws/src/py_motor_gui':\n"}
[0.587765] (py_motor_gui) StdoutLine: {'line': b'2:  - /opt/ros/humble/bin/ament_lint_cmake --xunit-file /home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/lint_cmake.xunit.xml\n'}
[0.612849] (-) TimerEvent: {}
[0.626129] (py_motor_gui) StdoutLine: {'line': b'2: \n'}
[0.626357] (py_motor_gui) StdoutLine: {'line': b'2: No problems found\n'}
[0.634503] (py_motor_gui) StdoutLine: {'line': b'2: -- run_test.py: return code 0\n'}
[0.634621] (py_motor_gui) StdoutLine: {'line': b"2: -- run_test.py: verify result file '/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/lint_cmake.xunit.xml'\n"}
[0.640051] (py_motor_gui) StdoutLine: {'line': b'2/4 Test #2: lint_cmake .......................   Passed    0.10 sec\n'}
[0.640181] (py_motor_gui) StdoutLine: {'line': b'test 3\n'}
[0.640217] (py_motor_gui) StdoutLine: {'line': b'    Start 3: pep257\n'}
[0.640247] (py_motor_gui) StdoutLine: {'line': b'\n'}
[0.640276] (py_motor_gui) StdoutLine: {'line': b'3: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/pep257.xunit.xml" "--package-name" "py_motor_gui" "--output-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/ament_pep257/pep257.txt" "--command" "/opt/ros/humble/bin/ament_pep257" "--xunit-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/pep257.xunit.xml"\n'}
[0.640308] (py_motor_gui) StdoutLine: {'line': b'3: Test timeout computed to be: 60\n'}
[0.674524] (py_motor_gui) StdoutLine: {'line': b"3: -- run_test.py: invoking following command in '/home/teo/ros2_motor_gui_ws/src/py_motor_gui':\n"}
[0.674626] (py_motor_gui) StdoutLine: {'line': b'3:  - /opt/ros/humble/bin/ament_pep257 --xunit-file /home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/pep257.xunit.xml\n'}
[0.716142] (-) TimerEvent: {}
[0.824837] (-) TimerEvent: {}
[0.836450] (py_motor_gui) StdoutLine: {'line': b'3: checking ./setup.py\n'}
[0.836564] (py_motor_gui) StdoutLine: {'line': b'3: checking ./src/motorGuiLogic.py\n'}
[0.836593] (py_motor_gui) StdoutLine: {'line': b'3: checking ./src/motorGuiNode.py\n'}
[0.836618] (py_motor_gui) StdoutLine: {'line': b'3: checking ./src/motorGuiWindow.py\n'}
[0.836642] (py_motor_gui) StdoutLine: {'line': b'3: No problems found\n'}
[0.848855] (py_motor_gui) StdoutLine: {'line': b'3: -- run_test.py: return code 0\n'}
[0.848976] (py_motor_gui) StdoutLine: {'line': b"3: -- run_test.py: verify result file '/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/pep257.xunit.xml'\n"}
[0.855623] (py_motor_gui) StdoutLine: {'line': b'3/4 Test #3: pep257 ...........................   Passed    0.22 sec\n'}
[0.855741] (py_motor_gui) StdoutLine: {'line': b'test 4\n'}
[0.855776] (py_motor_gui) StdoutLine: {'line': b'    Start 4: xmllint\n'}
[0.855828] (py_motor_gui) StdoutLine: {'line': b'\n'}
[0.855864] (py_motor_gui) StdoutLine: {'line': b'4: Test command: /usr/bin/python3.10 "-u" "/opt/ros/humble/share/ament_cmake_test/cmake/run_test.py" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/xmllint.xunit.xml" "--package-name" "py_motor_gui" "--output-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/ament_xmllint/xmllint.txt" "--command" "/opt/ros/humble/bin/ament_xmllint" "--xunit-file" "/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/xmllint.xunit.xml"\n'}
[0.855905] (py_motor_gui) StdoutLine: {'line': b'4: Test timeout computed to be: 60\n'}
[0.901327] (py_motor_gui) StdoutLine: {'line': b"4: -- run_test.py: invoking following command in '/home/teo/ros2_motor_gui_ws/src/py_motor_gui':\n"}
[0.901439] (py_motor_gui) StdoutLine: {'line': b'4:  - /opt/ros/humble/bin/ament_xmllint --xunit-file /home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/xmllint.xunit.xml\n'}
[0.926621] (-) TimerEvent: {}
[1.035474] (-) TimerEvent: {}
[1.144525] (-) TimerEvent: {}
[1.253540] (-) TimerEvent: {}
[1.362697] (-) TimerEvent: {}
[1.471803] (-) TimerEvent: {}
[1.580492] (-) TimerEvent: {}
[1.684362] (-) TimerEvent: {}
[1.725732] (py_motor_gui) StdoutLine: {'line': b"4: File 'package.xml' is valid\n"}
[1.726082] (py_motor_gui) StdoutLine: {'line': b'4: \n'}
[1.726217] (py_motor_gui) StdoutLine: {'line': b'4: No problems found\n'}
[1.753576] (py_motor_gui) StdoutLine: {'line': b'4: -- run_test.py: return code 0\n'}
[1.754258] (py_motor_gui) StdoutLine: {'line': b"4: -- run_test.py: verify result file '/home/teo/ros2_motor_gui_ws/build/py_motor_gui/test_results/py_motor_gui/xmllint.xunit.xml'\n"}
[1.779813] (py_motor_gui) StdoutLine: {'line': b'4/4 Test #4: xmllint ..........................   Passed    0.92 sec\n'}
[1.782546] (py_motor_gui) StdoutLine: {'line': b'\n'}
[1.783013] (py_motor_gui) StdoutLine: {'line': b'75% tests passed\x1b[0;0m, \x1b[0;31m1 tests failed\x1b[0;0m out of 4\n'}
[1.783398] (py_motor_gui) StdoutLine: {'line': b'\n'}
[1.783764] (py_motor_gui) StdoutLine: {'line': b'Label Time Summary:\n'}
[1.784081] (py_motor_gui) StdoutLine: {'line': b'flake8        =   0.47 sec*proc (1 test)\n'}
[1.784340] (-) TimerEvent: {}
[1.784862] (py_motor_gui) StdoutLine: {'line': b'lint_cmake    =   0.10 sec*proc (1 test)\n'}
[1.785105] (py_motor_gui) StdoutLine: {'line': b'linter        =   1.71 sec*proc (4 tests)\n'}
[1.785502] (py_motor_gui) StdoutLine: {'line': b'pep257        =   0.22 sec*proc (1 test)\n'}
[1.785822] (py_motor_gui) StdoutLine: {'line': b'xmllint       =   0.92 sec*proc (1 test)\n'}
[1.786317] (py_motor_gui) StdoutLine: {'line': b'\n'}
[1.786466] (py_motor_gui) StdoutLine: {'line': b'Total Test time (real) =   1.71 sec\n'}
[1.786588] (py_motor_gui) StdoutLine: {'line': b'\n'}
[1.786706] (py_motor_gui) StdoutLine: {'line': b'The following tests FAILED:\n'}
[1.786817] (py_motor_gui) StdoutLine: {'line': b'\t\x1b[0;31m  1 - flake8 (Failed)\x1b[0;0m\n'}
[1.794991] (py_motor_gui) StderrLine: {'line': b'Errors while running CTest\n'}
[1.795440] (py_motor_gui) StderrLine: {'line': b'Output from these tests are in: /home/teo/ros2_motor_gui_ws/build/py_motor_gui/Testing/Temporary/LastTest.log\n'}
[1.795590] (py_motor_gui) StderrLine: {'line': b'Use "--rerun-failed --output-on-failure" to re-run the failed cases verbosely.\n'}
[1.801101] (py_motor_gui) CommandEnded: {'returncode': 8}
[1.802319] (py_motor_gui) TestFailure: {'identifier': 'py_motor_gui'}
[1.802444] (py_motor_gui) JobEnded: {'identifier': 'py_motor_gui', 'rc': 0}
[1.804767] (-) EventReactorShutdown: {}
